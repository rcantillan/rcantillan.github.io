{
  "hash": "893bd3398a7831b52d7f2395424290a3",
  "result": {
    "markdown": "---\ntitle: \"Visualización Avanzada de Datos Categóricos\"\nsubtitle: \"Una guía con Tidyverse\"\nauthor: \"Roberto Cantillan\"\ndate: \"2023-08-09\"\ncategories: [R, ggplot, \"categorical data\"]\nformat: \n  html:\n    code-fold: false\n    toc: true\n    toc-location: left\n    theme: cosmo\n    code-copy: true\n    fig-width: 8\n    fig-height: 6\nexecute:\n  warning: false\n  message: false\ntitle-block-banner: \"rgba(148, 0, 0, 0.78)\"\ntitle-block-banner-color: \"rgba(105, 40, 145, 0.8)\"\ntitle-block-style: default\n---\n\n\n## 1. Introducción\n\nEsta guía está diseñada para ayudarte a comprender y crear visualizaciones efectivas de datos categóricos usando R. Aprenderemos desde gráficos básicos hasta visualizaciones avanzadas, explicando cada paso del proceso.\n\n### 1.1 Configuración del Entorno\n\nPrimero, configuraremos nuestro entorno de trabajo cargando los paquetes necesarios. Cada paquete tiene un propósito específico en nuestro flujo de trabajo:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Cargamos los paquetes necesarios usando pacman\n# pacman nos permite instalar y cargar paquetes en un solo paso\npacman::p_load(\n  tidyverse,      # Conjunto de paquetes para manipulación y visualización\n  ggthemes,       # Temas adicionales para hacer gráficos más atractivos\n  viridis,        # Paletas de colores accesibles y visualmente agradables\n  hrbrthemes,     # Temas modernos de alta calidad\n  patchwork,      # Permite combinar múltiples gráficos fácilmente\n  scales,         # Herramientas para personalizar escalas en gráficos\n  ggraph,         # Extensión de ggplot2 para grafos y redes\n  tidygraph,      # Manipulación de datos de redes al estilo tidyverse\n  plotly,         # Para hacer gráficos interactivos\n  kableExtra,      # Para crear tablas bonitas en R Markdown\n  ggmosaic,\n  ggalluvial\n)\n\n# Configuramos un tema global para consistencia en nuestros gráficos\ntheme_set(theme_minimal(base_size = 12))\n```\n:::\n\n\n## 2. Visualizaciones Básicas Mejoradas\n\n### 2.1 Gráfico de Barras Avanzado\n\nLos gráficos de barras son fundamentales para visualizar datos categóricos. Aquí aprenderemos a crear uno con características avanzadas:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Creamos datos de ejemplo estructurados\n# Este es un ejemplo común en análisis de datos categóricos\ndatos_categoricos <- tibble(\n  categoria = LETTERS[1:6],            # Usamos las primeras 6 letras del alfabeto\n  valor = c(25, 40, 15, 30, 20, 35),  # Valores para cada categoría\n  grupo = rep(c(\"Grupo 1\", \"Grupo 2\"), each = 3)  # Agrupación de categorías\n) %>%\n  # Convertimos categoria a factor para mejor control del orden\n  mutate(categoria = factor(categoria))\n\n# Creamos el gráfico paso a paso\nggplot(datos_categoricos, \n       aes(x = fct_reorder(categoria, valor),  # Ordenamos por valor\n           y = valor,\n           fill = grupo)) +  # Color según grupo\n  # Añadimos las barras\n  geom_bar(stat = \"identity\",          # Usamos los valores directamente\n           position = \"dodge\",          # Barras lado a lado\n           alpha = 0.8,                 # Transparencia\n           width = 0.7) +              # Ancho de las barras\n  # Añadimos etiquetas de valor\n  geom_text(aes(label = valor),\n            position = position_dodge(width = 0.7),\n            vjust = -0.5) +\n  # Usamos una escala de colores accesible\n  scale_fill_viridis_d() +\n  # Añadimos títulos y etiquetas\n  labs(title = \"Distribución por Categorías\",\n       subtitle = \"Comparación entre grupos con valores exactos\",\n       x = \"Categoría\",\n       y = \"Valor\",\n       fill = \"Grupo\") +\n  # Aplicamos un tema moderno\n  theme_ipsum_rc() +\n  # Personalizamos elementos del tema\n  theme(\n    axis.title = element_text(face = \"bold\"),\n    plot.title = element_text(size = 16, face = \"bold\"),\n    legend.position = \"top\"\n  )\n```\n\n::: {.cell-output-display}\n![Gráfico de barras avanzado con agrupación y etiquetas](index_files/figure-html/barras-avanzado-1.png){width=768}\n:::\n:::\n\n\nEn este gráfico, hemos implementado varias características importantes:\n\n1. **Ordenamiento**: Usamos `fct_reorder()` para ordenar las categorías por valor\n2. **Agrupación**: Separamos las barras por grupos usando `position = \"dodge\"`\n3. **Etiquetas**: Añadimos valores exactos sobre cada barra\n4. **Accesibilidad**: Utilizamos la paleta viridis para mejor visibilidad\n5. **Diseño**: Aplicamos un tema moderno y limpio\n\n### 2.2 Visualización de Redes con ggraph\n\nAhora crearemos una visualización de red usando ggraph, que es más flexible y consistente con la gramática de ggplot2:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Creamos datos para la red\n# Primero los nodos\nnodos <- tibble(\n  id = 1:8,\n  tipo = rep(c(\"A\", \"B\"), each = 4),\n  tamaño = sample(10:30, 8)\n)\n\n# Luego las conexiones\nenlaces <- tibble(\n  from = sample(1:8, 10, replace = TRUE),\n  to = sample(1:8, 10, replace = TRUE),\n  peso = runif(10, 0.1, 1)\n) %>%\n  # Evitamos auto-conexiones\n  filter(from != to)\n\n# Creamos el objeto de grafo\ngrafo <- tbl_graph(nodes = nodos, edges = enlaces)\n\n# Creamos la visualización\nggraph(grafo, layout = \"stress\") +\n  # Añadimos las conexiones\n  geom_edge_link(aes(width = peso, alpha = peso),\n                color = \"gray50\") +\n  # Añadimos los nodos\n  geom_node_point(aes(size = tamaño, \n                      color = tipo),\n                  alpha = 0.8) +\n  # Añadimos etiquetas a los nodos\n  geom_node_text(aes(label = id),\n                 repel = TRUE) +\n  # Personalizamos la apariencia\n  scale_edge_width(range = c(0.2, 2)) +\n  scale_size(range = c(4, 10)) +\n  scale_color_viridis_d() +\n  # Ajustamos el tema\n  theme_graph() +\n  # Añadimos títulos\n  labs(title = \"Red de Relaciones Categóricas\",\n       subtitle = \"Visualización con ggraph\",\n       color = \"Tipo\",\n       size = \"Tamaño\",\n       edge_width = \"Peso de conexión\")\n```\n\n::: {.cell-output-display}\n![Visualización de red usando ggraph](index_files/figure-html/red-ggraph-1.png){width=768}\n:::\n:::\n\n\nEsta visualización de red demuestra:\n\n1. **Estructura**: Representamos relaciones entre entidades\n2. **Atributos múltiples**: Mostramos tipo, tamaño y peso de conexiones\n3. **Diseño**: Utilizamos un layout que optimiza la visualización\n4. **Estética**: Implementamos transparencia y variación en grosor de líneas\n\n\n### 2.3 Gráficos de Mosaico Avanzados\n\nLos gráficos de mosaico son excelentes para visualizar relaciones entre variables categóricas. Son particularmente útiles cuando queremos mostrar proporciones y dependencias:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Primero, creamos datos más significativos\nset.seed(123)  # Para reproducibilidad\ndatos_mosaico <- tibble(\n  nivel_educativo = sample(c(\"Básica\", \"Media\", \"Superior\"), 1000, \n                          prob = c(0.3, 0.4, 0.3), replace = TRUE),\n  grupo_edad = sample(c(\"18-25\", \"26-35\", \"36+\"), 1000,\n                     prob = c(0.4, 0.35, 0.25), replace = TRUE),\n  genero = sample(c(\"F\", \"M\"), 1000, replace = TRUE)\n)\n\n# Creamos el gráfico de mosaico\nggplot(datos_mosaico) +\n  # Usamos geom_mosaic para crear el mosaico\n  geom_mosaic(aes(x = product(nivel_educativo, grupo_edad),\n                  fill = genero)) +\n  # Personalizamos colores\n  scale_fill_viridis_d(option = \"D\") +\n  # Añadimos títulos y etiquetas\n  labs(title = \"Distribución Educativa por Edad y Género\",\n       subtitle = \"Visualización mediante gráfico de mosaico\",\n       fill = \"Género\") +\n  # Personalizamos el tema\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    plot.title = element_text(face = \"bold\", size = 14),\n    plot.subtitle = element_text(size = 11, color = \"gray30\"),\n    panel.grid = element_blank()\n  )\n```\n\n::: {.cell-output-display}\n![Gráfico de mosaico mostrando relaciones entre variables categóricas](index_files/figure-html/mosaico-avanzado-1.png){width=768}\n:::\n\n```{.r .cell-code}\n# Añadimos una tabla resumen para complementar el gráfico\ndatos_mosaico %>%\n  group_by(nivel_educativo, grupo_edad, genero) %>%\n  summarise(n = n()) %>%\n  spread(genero, n) %>%\n  kable(caption = \"Distribución de frecuencias\") %>%\n  kable_styling(bootstrap_options = c(\"striped\", \"hover\"))\n```\n\n::: {.cell-output-display}\n<table class=\"table table-striped table-hover\" style=\"margin-left: auto; margin-right: auto;\">\n<caption>Distribución de frecuencias</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> nivel_educativo </th>\n   <th style=\"text-align:left;\"> grupo_edad </th>\n   <th style=\"text-align:right;\"> F </th>\n   <th style=\"text-align:right;\"> M </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Básica </td>\n   <td style=\"text-align:left;\"> 18-25 </td>\n   <td style=\"text-align:right;\"> 57 </td>\n   <td style=\"text-align:right;\"> 63 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Básica </td>\n   <td style=\"text-align:left;\"> 26-35 </td>\n   <td style=\"text-align:right;\"> 54 </td>\n   <td style=\"text-align:right;\"> 44 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Básica </td>\n   <td style=\"text-align:left;\"> 36+ </td>\n   <td style=\"text-align:right;\"> 41 </td>\n   <td style=\"text-align:right;\"> 36 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Media </td>\n   <td style=\"text-align:left;\"> 18-25 </td>\n   <td style=\"text-align:right;\"> 72 </td>\n   <td style=\"text-align:right;\"> 66 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Media </td>\n   <td style=\"text-align:left;\"> 26-35 </td>\n   <td style=\"text-align:right;\"> 75 </td>\n   <td style=\"text-align:right;\"> 79 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Media </td>\n   <td style=\"text-align:left;\"> 36+ </td>\n   <td style=\"text-align:right;\"> 53 </td>\n   <td style=\"text-align:right;\"> 59 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Superior </td>\n   <td style=\"text-align:left;\"> 18-25 </td>\n   <td style=\"text-align:right;\"> 75 </td>\n   <td style=\"text-align:right;\"> 56 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Superior </td>\n   <td style=\"text-align:left;\"> 26-35 </td>\n   <td style=\"text-align:right;\"> 59 </td>\n   <td style=\"text-align:right;\"> 56 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Superior </td>\n   <td style=\"text-align:left;\"> 36+ </td>\n   <td style=\"text-align:right;\"> 30 </td>\n   <td style=\"text-align:right;\"> 25 </td>\n  </tr>\n</tbody>\n</table>\n\n\n\nGráfico de mosaico mostrando relaciones entre variables categóricas\n:::\n:::\n\n\n**¿Por qué usar gráficos de mosaico?**\n1. Muestran proporciones relativas entre categorías\n2. Permiten visualizar hasta 3-4 variables categóricas simultáneamente\n3. Son efectivos para identificar patrones de asociación\n\n### 2.4 Heatmaps Categóricos Interactivos\n\nLos heatmaps son ideales para visualizar relaciones entre categorías cuando tenemos una medida de intensidad:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Creamos datos más significativos\ndatos_heat <- expand_grid(\n  departamento = c(\"Ventas\", \"Marketing\", \"IT\", \"RRHH\", \"Finanzas\"),\n  trimestre = c(\"Q1\", \"Q2\", \"Q3\", \"Q4\")\n) %>%\n  mutate(\n    rendimiento = rnorm(n(), mean = 75, sd = 15),\n    categoria_rendimiento = case_when(\n      rendimiento < 60 ~ \"Bajo\",\n      rendimiento < 80 ~ \"Medio\",\n      TRUE ~ \"Alto\"\n    )\n  )\n\n# Creamos el heatmap base con ggplot2\np <- ggplot(datos_heat, \n            aes(x = trimestre, \n                y = departamento, \n                fill = rendimiento,\n                text = paste(\"Departamento:\", departamento,\n                           \"\\nTrimestre:\", trimestre,\n                           \"\\nRendimiento:\", round(rendimiento, 1)))) +\n  geom_tile(color = \"white\") +\n  # Usamos una escala divergente\n  scale_fill_viridis(option = \"D\") +\n  # Personalizamos la apariencia\n  labs(title = \"Rendimiento por Departamento y Trimestre\",\n       x = \"Trimestre\",\n       y = \"Departamento\",\n       fill = \"Rendimiento\") +\n  theme_minimal() +\n  theme(\n    axis.text = element_text(face = \"bold\"),\n    panel.grid = element_blank(),\n    legend.position = \"right\"\n  )\n\n# Convertimos a interactivo\nggplotly(p, tooltip = \"text\")\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-60e47007fa32436b2ab7\" style=\"width:100%;height:487px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-60e47007fa32436b2ab7\">{\"x\":{\"data\":[{\"x\":[1,2,3,4],\"y\":[1,2,3,4,5],\"z\":[[0.34788076376362842,0.60790462254235855,0.39091924782806581,0.32921479053028824],[0.70075489707786787,0.66826812764184518,0.35809543936420213,0],[0.72677345455330622,1,0.52209865558411461,0.18536250676663557],[0.62934103578454392,0.72915858452296434,0.34266583867255546,0.56826562302061223],[0.19996052053779359,0.33936891151188969,0.17794971873590326,0.59291263455714405]],\"text\":[[\"Departamento: Finanzas <br />Trimestre: Q1 <br />Rendimiento: 70.9\",\"Departamento: Finanzas <br />Trimestre: Q2 <br />Rendimiento: 85.2\",\"Departamento: Finanzas <br />Trimestre: Q3 <br />Rendimiento: 73.2\",\"Departamento: Finanzas <br />Trimestre: Q4 <br />Rendimiento: 69.8\"],[\"Departamento: IT <br />Trimestre: Q1 <br />Rendimiento: 90.4\",\"Departamento: IT <br />Trimestre: Q2 <br />Rendimiento: 88.6\",\"Departamento: IT <br />Trimestre: Q3 <br />Rendimiento: 71.4\",\"Departamento: IT <br />Trimestre: Q4 <br />Rendimiento: 51.6\"],[\"Departamento: Marketing <br />Trimestre: Q1 <br />Rendimiento: 91.8\",\"Departamento: Marketing <br />Trimestre: Q2 <br />Rendimiento: 106.9\",\"Departamento: Marketing <br />Trimestre: Q3 <br />Rendimiento: 80.5\",\"Departamento: Marketing <br />Trimestre: Q4 <br />Rendimiento: 61.9\"],[\"Departamento: RRHH <br />Trimestre: Q1 <br />Rendimiento: 86.4\",\"Departamento: RRHH <br />Trimestre: Q2 <br />Rendimiento: 91.9\",\"Departamento: RRHH <br />Trimestre: Q3 <br />Rendimiento: 70.6\",\"Departamento: RRHH <br />Trimestre: Q4 <br />Rendimiento: 83\"],[\"Departamento: Ventas <br />Trimestre: Q1 <br />Rendimiento: 62.7\",\"Departamento: Ventas <br />Trimestre: Q2 <br />Rendimiento: 70.4\",\"Departamento: Ventas <br />Trimestre: Q3 <br />Rendimiento: 61.5\",\"Departamento: Ventas <br />Trimestre: Q4 <br />Rendimiento: 84.4\"]],\"colorscale\":[[0,\"#440154\"],[0.17794971873590326,\"#433D84\"],[0.18536250676663557,\"#423F85\"],[0.19996052053779359,\"#414487\"],[0.32921479053028824,\"#31678E\"],[0.33936891151188969,\"#306A8E\"],[0.34266583867255546,\"#306A8E\"],[0.34788076376362842,\"#2F6C8E\"],[0.35809543936420213,\"#2E6E8E\"],[0.39091924782806581,\"#2A768E\"],[0.52209865558411461,\"#1F958B\"],[0.56826562302061223,\"#1FA188\"],[0.59291263455714405,\"#21A685\"],[0.60790462254235855,\"#24AA83\"],[0.62934103578454392,\"#28AE80\"],[0.66826812764184518,\"#36B779\"],[0.70075489707786787,\"#43BF70\"],[0.72677345455330622,\"#51C46A\"],[0.72915858452296434,\"#52C569\"],[1,\"#FDE725\"]],\"type\":\"heatmap\",\"showscale\":false,\"autocolorscale\":false,\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[1],\"y\":[1],\"name\":\"16ef3a0bec740c4414e569f77f02503f\",\"type\":\"scatter\",\"mode\":\"markers\",\"opacity\":0,\"hoverinfo\":\"skip\",\"showlegend\":false,\"marker\":{\"color\":[0,1],\"colorscale\":[[0,\"#440154\"],[0.0033444816053512334,\"#440256\"],[0.0066889632107023384,\"#450357\"],[0.010033444816053571,\"#450558\"],[0.013377926421404677,\"#450659\"],[0.016722408026755911,\"#46075B\"],[0.020066889632107014,\"#46085C\"],[0.023411371237458248,\"#460A5D\"],[0.026755852842809354,\"#460B5E\"],[0.030100334448160584,\"#470C5F\"],[0.03344481605351169,\"#470E61\"],[0.036789297658862921,\"#470F62\"],[0.040133779264214027,\"#471063\"],[0.043478260869565265,\"#471164\"],[0.046822742474916364,\"#471365\"],[0.050167224080267601,\"#481467\"],[0.053511705685618707,\"#481568\"],[0.056856187290969938,\"#481768\"],[0.060200668896321044,\"#481769\"],[0.063545150501672282,\"#48186A\"],[0.066889632107023381,\"#481A6C\"],[0.070234113712374618,\"#481B6D\"],[0.073578595317725717,\"#481C6E\"],[0.076923076923076955,\"#481D6F\"],[0.080267558528428054,\"#481E6F\"],[0.083612040133779292,\"#481F70\"],[0.086956521739130391,\"#482071\"],[0.090301003344481628,\"#482173\"],[0.093645484949832727,\"#482374\"],[0.096989966555183965,\"#482475\"],[0.10033444816053508,\"#482576\"],[0.1036789297658863,\"#482576\"],[0.10702341137123741,\"#482777\"],[0.11036789297658864,\"#482878\"],[0.11371237458193975,\"#482979\"],[0.11705685618729098,\"#472A7A\"],[0.12040133779264209,\"#472B7A\"],[0.12374581939799333,\"#472D7B\"],[0.12709030100334456,\"#472D7B\"],[0.13043478260869565,\"#472E7C\"],[0.13377926421404676,\"#472F7D\"],[0.13712374581939799,\"#46307E\"],[0.14046822742474924,\"#46327E\"],[0.14381270903010032,\"#46337F\"],[0.14715719063545143,\"#463480\"],[0.15050167224080266,\"#463480\"],[0.15384615384615391,\"#453581\"],[0.15719063545150502,\"#453781\"],[0.16053511705685611,\"#453882\"],[0.16387959866220736,\"#443983\"],[0.16722408026755858,\"#443A83\"],[0.1705685618729097,\"#443A83\"],[0.17391304347826078,\"#443C84\"],[0.17725752508361203,\"#433D84\"],[0.18060200668896326,\"#433E85\"],[0.18394648829431437,\"#423F85\"],[0.18729096989966559,\"#424086\"],[0.19063545150501671,\"#424186\"],[0.19397993311036793,\"#424186\"],[0.19732441471571904,\"#414387\"],[0.20066889632107027,\"#414487\"],[0.20401337792642138,\"#404588\"],[0.2073578595317726,\"#404688\"],[0.21070234113712372,\"#3F4788\"],[0.21404682274247494,\"#3F4889\"],[0.21739130434782605,\"#3F4889\"],[0.22073578595317728,\"#3E4989\"],[0.22408026755852853,\"#3E4A89\"],[0.2274247491638795,\"#3E4C8A\"],[0.23076923076923073,\"#3D4D8A\"],[0.23411371237458195,\"#3D4E8A\"],[0.2374581939799332,\"#3C4F8A\"],[0.24080267558528418,\"#3C4F8A\"],[0.2441471571906354,\"#3C508B\"],[0.24749163879598665,\"#3B518B\"],[0.25083612040133785,\"#3B528B\"],[0.25418060200668885,\"#3A538B\"],[0.25752508361204007,\"#3A548C\"],[0.2608695652173913,\"#39558C\"],[0.26421404682274258,\"#39558C\"],[0.2675585284280938,\"#39568C\"],[0.27090301003344475,\"#38588C\"],[0.27424749163879597,\"#38598C\"],[0.27759197324414725,\"#375A8C\"],[0.2809364548494982,\"#375B8D\"],[0.28428093645484942,\"#375B8D\"],[0.28762541806020064,\"#365C8D\"],[0.29096989966555192,\"#365D8D\"],[0.29431438127090315,\"#355E8D\"],[0.29765886287625409,\"#355F8D\"],[0.30100334448160532,\"#34608D\"],[0.3043478260869566,\"#34618D\"],[0.30769230769230754,\"#34618D\"],[0.31103678929765877,\"#33628D\"],[0.31438127090301005,\"#33638D\"],[0.31772575250836127,\"#32648E\"],[0.32107023411371249,\"#32658E\"],[0.32441471571906344,\"#31668E\"],[0.32775919732441472,\"#31678E\"],[0.33110367892976594,\"#31678E\"],[0.33444816053511689,\"#31688E\"],[0.33779264214046811,\"#30698E\"],[0.34113712374581939,\"#306A8E\"],[0.34448160535117062,\"#2F6B8E\"],[0.34782608695652184,\"#2F6C8E\"],[0.35117056856187284,\"#2E6D8E\"],[0.35451505016722407,\"#2E6D8E\"],[0.35785953177257529,\"#2E6E8E\"],[0.36120401337792651,\"#2E6F8E\"],[0.36454849498327774,\"#2D708E\"],[0.36789297658862874,\"#2D718E\"],[0.37123745819397996,\"#2C718E\"],[0.37458193979933119,\"#2C728E\"],[0.37792642140468219,\"#2C728E\"],[0.38127090301003341,\"#2C738E\"],[0.38461538461538464,\"#2B748E\"],[0.38795986622073586,\"#2B758E\"],[0.39130434782608708,\"#2A768E\"],[0.39464882943143809,\"#2A778E\"],[0.39799331103678931,\"#2A778E\"],[0.40133779264214053,\"#2A788E\"],[0.40468227424749154,\"#29798E\"],[0.40802675585284276,\"#297A8E\"],[0.41137123745819398,\"#297B8E\"],[0.41471571906354521,\"#287C8E\"],[0.41806020066889643,\"#287D8E\"],[0.42140468227424743,\"#287D8E\"],[0.42474916387959866,\"#277E8E\"],[0.42809364548494988,\"#277F8E\"],[0.43143812709030088,\"#27808E\"],[0.43478260869565211,\"#26818E\"],[0.43812709030100333,\"#26828E\"],[0.44147157190635455,\"#26828E\"],[0.44481605351170583,\"#26828E\"],[0.44816053511705678,\"#25838E\"],[0.451505016722408,\"#25848E\"],[0.45484949832775923,\"#25858E\"],[0.45819397993311023,\"#24868E\"],[0.46153846153846145,\"#24878E\"],[0.46488294314381268,\"#23888E\"],[0.4682274247491639,\"#23888E\"],[0.47157190635451518,\"#23898E\"],[0.47491638795986613,\"#238A8D\"],[0.47826086956521735,\"#228B8D\"],[0.48160535117056863,\"#228C8D\"],[0.48494983277591958,\"#228D8D\"],[0.4882943143812708,\"#218E8D\"],[0.49163879598662202,\"#218E8D\"],[0.4949832775919733,\"#218F8D\"],[0.49832775919732453,\"#21908D\"],[0.50167224080267547,\"#21918C\"],[0.50501672240802675,\"#20928C\"],[0.50836120401337792,\"#20928C\"],[0.5117056856187292,\"#20928C\"],[0.51505016722408037,\"#20938C\"],[0.51839464882943143,\"#1F948C\"],[0.52173913043478259,\"#1F958B\"],[0.52508361204013387,\"#1F968B\"],[0.52842809364548482,\"#1F978B\"],[0.5317725752508361,\"#1F988B\"],[0.53511705685618727,\"#1F988B\"],[0.53846153846153855,\"#1F998A\"],[0.54180602006688983,\"#1F9A8A\"],[0.54515050167224077,\"#1E9B8A\"],[0.54849498327759194,\"#1E9C89\"],[0.55183946488294322,\"#1E9D89\"],[0.55518394648829417,\"#1F9E89\"],[0.55852842809364545,\"#1F9E89\"],[0.56187290969899661,\"#1F9F88\"],[0.56521739130434789,\"#1FA088\"],[0.56856187290969917,\"#1FA188\"],[0.57190635451505012,\"#1FA187\"],[0.57525083612040129,\"#1FA287\"],[0.57859531772575257,\"#20A386\"],[0.58193979933110351,\"#20A386\"],[0.58528428093645501,\"#20A486\"],[0.58862876254180596,\"#21A585\"],[0.59197324414715724,\"#21A685\"],[0.59531772575250852,\"#22A785\"],[0.59866220735785947,\"#22A884\"],[0.60200668896321063,\"#23A983\"],[0.60535117056856191,\"#23A983\"],[0.60869565217391286,\"#24AA83\"],[0.61204013377926436,\"#25AB82\"],[0.61538461538461542,\"#25AC82\"],[0.61872909698996659,\"#26AD81\"],[0.62207357859531787,\"#27AD81\"],[0.62541806020066881,\"#27AD81\"],[0.62876254180602009,\"#28AE80\"],[0.63210702341137126,\"#29AF7F\"],[0.63545150501672221,\"#2AB07F\"],[0.63879598662207371,\"#2CB17E\"],[0.64214046822742477,\"#2DB27D\"],[0.64548494983277593,\"#2EB37C\"],[0.64882943143812721,\"#2EB37C\"],[0.65217391304347816,\"#30B47C\"],[0.65551839464882944,\"#31B57B\"],[0.65886287625418061,\"#32B67A\"],[0.66220735785953155,\"#34B679\"],[0.66555183946488305,\"#35B779\"],[0.66889632107023411,\"#36B878\"],[0.67224080267558528,\"#37B878\"],[0.67558528428093656,\"#39B977\"],[0.67892976588628751,\"#3ABA76\"],[0.68227424749163879,\"#3BBB75\"],[0.68561872909698995,\"#3DBC74\"],[0.6889632107023409,\"#3EBC73\"],[0.6923076923076924,\"#40BD72\"],[0.69565217391304346,\"#41BD72\"],[0.69899665551839463,\"#42BE71\"],[0.70234113712374591,\"#44BF70\"],[0.70568561872909685,\"#46C06F\"],[0.70903010033444813,\"#48C16E\"],[0.7123745819397993,\"#49C16D\"],[0.71571906354515058,\"#4BC26C\"],[0.71906354515050175,\"#4DC26C\"],[0.72240802675585281,\"#4EC36B\"],[0.72575250836120397,\"#50C46A\"],[0.72909698996655525,\"#52C569\"],[0.7324414715719062,\"#54C568\"],[0.7357859531772577,\"#55C667\"],[0.73913043478260865,\"#57C666\"],[0.74247491638795993,\"#59C765\"],[0.74581939799331121,\"#5AC864\"],[0.74916387959866215,\"#5CC863\"],[0.75250836120401332,\"#5EC962\"],[0.7558528428093646,\"#5FCA61\"],[0.75919732441471555,\"#62CB5F\"],[0.76254180602006705,\"#64CB5F\"],[0.76588628762541799,\"#66CB5D\"],[0.76923076923076927,\"#67CC5C\"],[0.77257525083612055,\"#69CD5B\"],[0.7759197324414715,\"#6CCD5A\"],[0.77926421404682267,\"#6DCE59\"],[0.78260869565217395,\"#6FCF57\"],[0.78595317725752489,\"#71CF57\"],[0.78929765886287639,\"#74D055\"],[0.79264214046822734,\"#75D054\"],[0.79598662207357862,\"#77D153\"],[0.7993311036789299,\"#79D151\"],[0.80267558528428085,\"#7BD250\"],[0.80602006688963201,\"#7ED34F\"],[0.80936454849498329,\"#80D34E\"],[0.81270903010033424,\"#82D34D\"],[0.81605351170568574,\"#84D44B\"],[0.81939799331103669,\"#86D549\"],[0.82274247491638797,\"#88D548\"],[0.82608695652173925,\"#8AD647\"],[0.82943143812709019,\"#8DD645\"],[0.83277591973244147,\"#8FD644\"],[0.83612040133779264,\"#91D743\"],[0.83946488294314359,\"#93D741\"],[0.84280936454849509,\"#95D840\"],[0.84615384615384615,\"#97D83E\"],[0.84949832775919731,\"#9AD93D\"],[0.85284280936454859,\"#9CD93C\"],[0.85618729096989954,\"#9ED93A\"],[0.85953177257525104,\"#A0DA39\"],[0.86287625418060199,\"#A2DA37\"],[0.86622073578595327,\"#A5DB36\"],[0.86956521739130443,\"#A7DB35\"],[0.87290969899665549,\"#A9DC33\"],[0.87625418060200666,\"#ABDC31\"],[0.87959866220735794,\"#AEDC30\"],[0.88294314381270889,\"#B0DD2F\"],[0.88628762541806039,\"#B2DD2D\"],[0.88963210702341133,\"#B5DE2B\"],[0.89297658862876261,\"#B7DE2A\"],[0.89632107023411378,\"#B9DE28\"],[0.89966555183946484,\"#BBDE27\"],[0.90301003344481601,\"#BEDF26\"],[0.90635451505016729,\"#C0DF25\"],[0.90969899665551823,\"#C2DF23\"],[0.91304347826086973,\"#C4E021\"],[0.91638795986622068,\"#C7E020\"],[0.91973244147157196,\"#C9E11F\"],[0.92307692307692313,\"#CBE11E\"],[0.92642140468227419,\"#CEE11D\"],[0.92976588628762535,\"#D0E11C\"],[0.93311036789297663,\"#D2E21B\"],[0.93645484949832758,\"#D4E21A\"],[0.93979933110367908,\"#D7E219\"],[0.94314381270903003,\"#D9E319\"],[0.94648829431438131,\"#DBE319\"],[0.94983277591973247,\"#DDE318\"],[0.95317725752508353,\"#DFE318\"],[0.9565217391304347,\"#E2E418\"],[0.95986622073578598,\"#E4E419\"],[0.96321070234113693,\"#E6E419\"],[0.96655518394648843,\"#E8E419\"],[0.96989966555183937,\"#EBE51A\"],[0.97324414715719065,\"#EDE51B\"],[0.97658862876254193,\"#EFE51C\"],[0.97993311036789288,\"#F1E51D\"],[0.98327759197324405,\"#F3E61E\"],[0.98662207357859533,\"#F5E61F\"],[0.98996655518394627,\"#F7E620\"],[0.99331103678929777,\"#F9E622\"],[0.99665551839464872,\"#FBE723\"],[1,\"#FDE725\"]],\"colorbar\":{\"bgcolor\":null,\"bordercolor\":null,\"borderwidth\":0,\"thickness\":23.040000000000003,\"title\":\"Rendimiento\",\"titlefont\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"tickmode\":\"array\",\"ticktext\":[\"60\",\"70\",\"80\",\"90\",\"100\"],\"tickvals\":[0.15254456598102226,0.33285178477817579,0.5131590035753294,0.69346622237248301,0.87377344116963651],\"tickfont\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.68949771689498},\"ticklen\":2,\"len\":0.5}},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":43.275494672754945,\"r\":7.3059360730593621,\"b\":39.69558599695587,\"l\":78.173515981735193},\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"title\":{\"text\":\"Rendimiento por Departamento y Trimestre\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":17.534246575342465},\"x\":0,\"xref\":\"paper\"},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[0.40000000000000002,4.5999999999999996],\"tickmode\":\"array\",\"ticktext\":[\"Q1\",\"Q2\",\"Q3\",\"Q4\"],\"tickvals\":[1,2,3,4],\"categoryorder\":\"array\",\"categoryarray\":[\"Q1\",\"Q2\",\"Q3\",\"Q4\"],\"nticks\":null,\"ticks\":\"\",\"tickcolor\":null,\"ticklen\":3.6529680365296811,\"tickwidth\":0,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":false,\"gridcolor\":null,\"gridwidth\":0,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"Trimestre\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[0.40000000000000002,5.5999999999999996],\"tickmode\":\"array\",\"ticktext\":[\"Finanzas\",\"IT\",\"Marketing\",\"RRHH\",\"Ventas\"],\"tickvals\":[1,2,3,4,5],\"categoryorder\":\"array\",\"categoryarray\":[\"Finanzas\",\"IT\",\"Marketing\",\"RRHH\",\"Ventas\"],\"nticks\":null,\"ticks\":\"\",\"tickcolor\":null,\"ticklen\":3.6529680365296811,\"tickwidth\":0,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.689497716894984},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":false,\"gridcolor\":null,\"gridwidth\":0,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"Departamento\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":false,\"legend\":{\"bgcolor\":null,\"bordercolor\":null,\"borderwidth\":0,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.68949771689498},\"title\":{\"text\":\"Rendimiento\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"6c754616839a8\":{\"x\":{},\"y\":{},\"fill\":{},\"text\":{},\"type\":\"heatmap\"}},\"cur_data\":\"6c754616839a8\",\"visdat\":{\"6c754616839a8\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n\nHeatmap interactivo de relaciones categóricas\n:::\n\n```{.r .cell-code}\n# Explicación del patrón observado\ndatos_heat %>%\n  group_by(departamento) %>%\n  summarise(\n    rendimiento_medio = mean(rendimiento),\n    variabilidad = sd(rendimiento)\n  ) %>%\n  arrange(desc(rendimiento_medio)) %>%\n  kable(caption = \"Resumen de rendimiento por departamento\",\n        digits = 2) %>%\n  kable_styling(bootstrap_options = c(\"striped\", \"hover\"))\n```\n\n::: {.cell-output-display}\n<table class=\"table table-striped table-hover\" style=\"margin-left: auto; margin-right: auto;\">\n<caption>Resumen de rendimiento por departamento</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> departamento </th>\n   <th style=\"text-align:right;\"> rendimiento_medio </th>\n   <th style=\"text-align:right;\"> variabilidad </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Marketing </td>\n   <td style=\"text-align:right;\"> 85.27 </td>\n   <td style=\"text-align:right;\"> 18.98 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> RRHH </td>\n   <td style=\"text-align:right;\"> 82.99 </td>\n   <td style=\"text-align:right;\"> 9.06 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> IT </td>\n   <td style=\"text-align:right;\"> 75.50 </td>\n   <td style=\"text-align:right;\"> 18.06 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Finanzas </td>\n   <td style=\"text-align:right;\"> 74.79 </td>\n   <td style=\"text-align:right;\"> 7.11 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Ventas </td>\n   <td style=\"text-align:right;\"> 69.74 </td>\n   <td style=\"text-align:right;\"> 10.55 </td>\n  </tr>\n</tbody>\n</table>\n\n\n\nHeatmap interactivo de relaciones categóricas\n:::\n:::\n\n\n**Elementos clave del heatmap:**\n1. **Color**: Representa la intensidad o valor\n2. **Posición**: Dos dimensiones categóricas\n3. **Interactividad**: Tooltips para detalles específicos\n4. **Resumen**: Tabla complementaria para métricas clave\n\n### 2.5 Visualización de Flujos con ggalluvial\n\nLos diagramas de flujo (o aluviales) son excelentes para mostrar cambios en categorías a lo largo del tiempo o entre estados:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Creamos datos de ejemplo de trayectorias profesionales\ndatos_flujo <- tibble(\n  id = rep(1:200, each = 3),\n  tiempo = rep(c(\"2020\", \"2021\", \"2022\"), times = 200),\n  estado = c(\n    # 2020\n    sample(c(\"Estudiante\", \"Empleado\", \"Desempleado\"), 200, \n           prob = c(0.5, 0.3, 0.2), replace = TRUE),\n    # 2021\n    sample(c(\"Estudiante\", \"Empleado\", \"Desempleado\"), 200,\n           prob = c(0.3, 0.5, 0.2), replace = TRUE),\n    # 2022\n    sample(c(\"Estudiante\", \"Empleado\", \"Desempleado\"), 200,\n           prob = c(0.2, 0.6, 0.2), replace = TRUE)\n  )\n)\n\n# Creamos el diagrama de flujo\nggplot(datos_flujo,\n       aes(x = tiempo, \n           stratum = estado, \n           alluvium = id,\n           fill = estado, \n           label = estado)) +\n  geom_flow(stat = \"alluvium\", \n            lode.guidance = \"frontback\",\n            alpha = 0.7) +\n  geom_stratum() +\n  # Añadimos etiquetas\n  geom_text(stat = \"stratum\", \n            aes(label = after_stat(n))) +\n  # Personalizamos colores y tema\n  scale_fill_viridis_d() +\n  theme_minimal() +\n  labs(title = \"Trayectorias Profesionales 2020-2022\",\n       subtitle = \"Flujos entre diferentes estados laborales\",\n       x = \"Año\",\n       fill = \"Estado\") +\n  theme(\n    legend.position = \"bottom\",\n    plot.title = element_text(face = \"bold\"),\n    axis.text.x = element_text(face = \"bold\")\n  )\n```\n\n::: {.cell-output-display}\n![Diagrama de flujo mostrando transiciones entre categorías](index_files/figure-html/flujo-alluvial-1.png){width=768}\n:::\n\n```{.r .cell-code}\n# Añadimos una tabla de transiciones\ndatos_flujo %>%\n  group_by(tiempo, estado) %>%\n  summarise(n = n()) %>%\n  spread(tiempo, n) %>%\n  kable(caption = \"Distribución por año\") %>%\n  kable_styling(bootstrap_options = c(\"striped\", \"hover\"))\n```\n\n::: {.cell-output-display}\n<table class=\"table table-striped table-hover\" style=\"margin-left: auto; margin-right: auto;\">\n<caption>Distribución por año</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> estado </th>\n   <th style=\"text-align:right;\"> 2020 </th>\n   <th style=\"text-align:right;\"> 2021 </th>\n   <th style=\"text-align:right;\"> 2022 </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Desempleado </td>\n   <td style=\"text-align:right;\"> 37 </td>\n   <td style=\"text-align:right;\"> 58 </td>\n   <td style=\"text-align:right;\"> 40 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Empleado </td>\n   <td style=\"text-align:right;\"> 95 </td>\n   <td style=\"text-align:right;\"> 96 </td>\n   <td style=\"text-align:right;\"> 91 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Estudiante </td>\n   <td style=\"text-align:right;\"> 68 </td>\n   <td style=\"text-align:right;\"> 46 </td>\n   <td style=\"text-align:right;\"> 69 </td>\n  </tr>\n</tbody>\n</table>\n\n\n\nDiagrama de flujo mostrando transiciones entre categorías\n:::\n:::\n\n\n**Ventajas de los diagramas de flujo:**\n1. Muestran cambios y transiciones\n2. Permiten seguir trayectorias individuales\n3. Visualizan proporciones cambiantes\n4. Identifican patrones de movimiento\n\n\n## 3. Visualizaciones de Distribución\n\n### 3.1 Gráficos de Ridgeline para Categorías\n\nLos gráficos de ridgeline son excelentes para comparar distribuciones entre categorías, especialmente cuando queremos ver cambios o patrones evolutivos:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Cargamos ggridges\nlibrary(ggridges)\n\n# Creamos datos más significativos\nset.seed(123)\ndatos_distribuciones <- tibble(\n  año = rep(2018:2022, each = 1000),\n  valor = c(\n    rnorm(1000, mean = 20, sd = 5),  # 2018\n    rnorm(1000, mean = 22, sd = 5),  # 2019\n    rnorm(1000, mean = 18, sd = 6),  # 2020\n    rnorm(1000, mean = 25, sd = 4),  # 2021\n    rnorm(1000, mean = 28, sd = 5)   # 2022\n  ),\n  categoria = factor(año)\n)\n\n# Creamos el gráfico de ridgeline\nggplot(datos_distribuciones, \n       aes(x = valor, \n           y = categoria, \n           fill = after_stat(x))) +\n  geom_density_ridges_gradient(\n    scale = 3,\n    rel_min_height = 0.01,\n    gradient_lwd = 1\n  ) +\n  scale_fill_viridis_c(option = \"C\") +\n  labs(\n    title = \"Evolución de Distribuciones por Año\",\n    subtitle = \"Visualización mediante gráfico de ridgeline\",\n    x = \"Valor\",\n    y = \"Año\",\n    fill = \"Valor\"\n  ) +\n  theme_ridges() +\n  theme(\n    legend.position = \"none\",\n    plot.title = element_text(face = \"bold\"),\n    plot.subtitle = element_text(color = \"gray40\")\n  )\n```\n\n::: {.cell-output-display}\n![Gráfico de ridgeline mostrando distribuciones por categoría](index_files/figure-html/ridgeline-avanzado-1.png){width=768}\n:::\n\n```{.r .cell-code}\n# Añadimos estadísticas descriptivas\ndatos_distribuciones %>%\n  group_by(año) %>%\n  summarise(\n    media = mean(valor),\n    desv_est = sd(valor),\n    mediana = median(valor),\n    q25 = quantile(valor, 0.25),\n    q75 = quantile(valor, 0.75)\n  ) %>%\n  kable(caption = \"Estadísticas descriptivas por año\",\n        digits = 2) %>%\n  kable_styling(bootstrap_options = c(\"striped\", \"hover\"))\n```\n\n::: {.cell-output-display}\n<table class=\"table table-striped table-hover\" style=\"margin-left: auto; margin-right: auto;\">\n<caption>Estadísticas descriptivas por año</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:right;\"> año </th>\n   <th style=\"text-align:right;\"> media </th>\n   <th style=\"text-align:right;\"> desv_est </th>\n   <th style=\"text-align:right;\"> mediana </th>\n   <th style=\"text-align:right;\"> q25 </th>\n   <th style=\"text-align:right;\"> q75 </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> 2018 </td>\n   <td style=\"text-align:right;\"> 20.08 </td>\n   <td style=\"text-align:right;\"> 4.96 </td>\n   <td style=\"text-align:right;\"> 20.05 </td>\n   <td style=\"text-align:right;\"> 16.86 </td>\n   <td style=\"text-align:right;\"> 23.32 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 2019 </td>\n   <td style=\"text-align:right;\"> 22.21 </td>\n   <td style=\"text-align:right;\"> 5.05 </td>\n   <td style=\"text-align:right;\"> 22.27 </td>\n   <td style=\"text-align:right;\"> 18.73 </td>\n   <td style=\"text-align:right;\"> 25.77 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 2020 </td>\n   <td style=\"text-align:right;\"> 17.88 </td>\n   <td style=\"text-align:right;\"> 5.87 </td>\n   <td style=\"text-align:right;\"> 17.70 </td>\n   <td style=\"text-align:right;\"> 14.06 </td>\n   <td style=\"text-align:right;\"> 21.86 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 2021 </td>\n   <td style=\"text-align:right;\"> 24.96 </td>\n   <td style=\"text-align:right;\"> 3.97 </td>\n   <td style=\"text-align:right;\"> 24.97 </td>\n   <td style=\"text-align:right;\"> 22.44 </td>\n   <td style=\"text-align:right;\"> 27.60 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 2022 </td>\n   <td style=\"text-align:right;\"> 27.84 </td>\n   <td style=\"text-align:right;\"> 5.00 </td>\n   <td style=\"text-align:right;\"> 27.84 </td>\n   <td style=\"text-align:right;\"> 24.47 </td>\n   <td style=\"text-align:right;\"> 31.18 </td>\n  </tr>\n</tbody>\n</table>\n\n\n\nGráfico de ridgeline mostrando distribuciones por categoría\n:::\n:::\n\n\n**¿Por qué usar gráficos ridgeline?**\n1. Muestran la forma completa de la distribución\n2. Permiten comparar múltiples categorías\n3. Son efectivos para visualizar tendencias temporales\n4. Revelan cambios en la variabilidad\n\n### 3.2 Visualizaciones Compuestas con Faceting\n\nEl faceting es una técnica poderosa para crear múltiples visualizaciones relacionadas:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Creamos datos más complejos\ndatos_panel <- tibble(\n  departamento = rep(c(\"Ventas\", \"Marketing\", \"IT\"), each = 300),  # Reducimos a 300 cada uno\n  año = rep(rep(2020:2022, each = 100), 3),  # Ahora coincide: 100 x 3 años x 3 departamentos = 900\n  rendimiento = c(\n    # Ventas (300 observaciones: 100 por año)\n    rnorm(100, 70, 10), rnorm(100, 75, 8), rnorm(100, 80, 12),\n    # Marketing (300 observaciones: 100 por año)\n    rnorm(100, 65, 12), rnorm(100, 72, 10), rnorm(100, 78, 9),\n    # IT (300 observaciones: 100 por año)\n    rnorm(100, 75, 8), rnorm(100, 82, 7), rnorm(100, 85, 6)\n  ),\n  categoria = cut(rendimiento, \n                 breaks = c(-Inf, 60, 75, Inf),\n                 labels = c(\"Bajo\", \"Medio\", \"Alto\"))\n)\n\n# Creamos visualización múltiple\np1 <- ggplot(datos_panel, aes(x = rendimiento, fill = departamento)) +\n  geom_density(alpha = 0.5) +\n  facet_wrap(~año) +\n  scale_fill_viridis_d() +\n  theme_minimal() +\n  labs(title = \"Distribución de Rendimiento por Año\",\n       x = \"Rendimiento\",\n       y = \"Densidad\")\n\np2 <- ggplot(datos_panel, \n             aes(x = factor(año), y = rendimiento, fill = departamento)) +\n  geom_boxplot(alpha = 0.7) +\n  scale_fill_viridis_d() +\n  theme_minimal() +\n  labs(title = \"Boxplots de Rendimiento por Año y Departamento\",\n       x = \"Año\",\n       y = \"Rendimiento\")\n\n# Combinamos los gráficos con patchwork\np1 / p2 +\n  plot_annotation(\n    title = \"Análisis Multidimensional del Rendimiento\",\n    subtitle = \"Distribuciones y comparaciones por departamento y año\",\n    tag_levels = \"A\"\n  ) &\n  theme(plot.title = element_text(face = \"bold\"))\n```\n\n::: {.cell-output-display}\n![Panel de visualizaciones usando faceting](index_files/figure-html/facet-complejo-1.png){width=768}\n:::\n\n```{.r .cell-code}\n# Tabla resumen\ndatos_panel %>%\n  group_by(departamento, año) %>%\n  summarise(\n    n = n(),\n    media = mean(rendimiento),\n    mediana = median(rendimiento),\n    desv_est = sd(rendimiento),\n    prop_alto = mean(categoria == \"Alto\")\n  ) %>%\n  kable(caption = \"Métricas de rendimiento por departamento y año\",\n        digits = 2) %>%\n  kable_styling(bootstrap_options = c(\"striped\", \"hover\"))\n```\n\n::: {.cell-output-display}\n<table class=\"table table-striped table-hover\" style=\"margin-left: auto; margin-right: auto;\">\n<caption>Métricas de rendimiento por departamento y año</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> departamento </th>\n   <th style=\"text-align:right;\"> año </th>\n   <th style=\"text-align:right;\"> n </th>\n   <th style=\"text-align:right;\"> media </th>\n   <th style=\"text-align:right;\"> mediana </th>\n   <th style=\"text-align:right;\"> desv_est </th>\n   <th style=\"text-align:right;\"> prop_alto </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> IT </td>\n   <td style=\"text-align:right;\"> 2020 </td>\n   <td style=\"text-align:right;\"> 100 </td>\n   <td style=\"text-align:right;\"> 74.82 </td>\n   <td style=\"text-align:right;\"> 74.39 </td>\n   <td style=\"text-align:right;\"> 8.10 </td>\n   <td style=\"text-align:right;\"> 0.49 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> IT </td>\n   <td style=\"text-align:right;\"> 2021 </td>\n   <td style=\"text-align:right;\"> 100 </td>\n   <td style=\"text-align:right;\"> 82.10 </td>\n   <td style=\"text-align:right;\"> 82.35 </td>\n   <td style=\"text-align:right;\"> 6.91 </td>\n   <td style=\"text-align:right;\"> 0.82 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> IT </td>\n   <td style=\"text-align:right;\"> 2022 </td>\n   <td style=\"text-align:right;\"> 100 </td>\n   <td style=\"text-align:right;\"> 85.22 </td>\n   <td style=\"text-align:right;\"> 84.73 </td>\n   <td style=\"text-align:right;\"> 6.15 </td>\n   <td style=\"text-align:right;\"> 0.97 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Marketing </td>\n   <td style=\"text-align:right;\"> 2020 </td>\n   <td style=\"text-align:right;\"> 100 </td>\n   <td style=\"text-align:right;\"> 64.58 </td>\n   <td style=\"text-align:right;\"> 63.41 </td>\n   <td style=\"text-align:right;\"> 12.09 </td>\n   <td style=\"text-align:right;\"> 0.17 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Marketing </td>\n   <td style=\"text-align:right;\"> 2021 </td>\n   <td style=\"text-align:right;\"> 100 </td>\n   <td style=\"text-align:right;\"> 73.00 </td>\n   <td style=\"text-align:right;\"> 72.05 </td>\n   <td style=\"text-align:right;\"> 10.77 </td>\n   <td style=\"text-align:right;\"> 0.42 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Marketing </td>\n   <td style=\"text-align:right;\"> 2022 </td>\n   <td style=\"text-align:right;\"> 100 </td>\n   <td style=\"text-align:right;\"> 78.73 </td>\n   <td style=\"text-align:right;\"> 79.11 </td>\n   <td style=\"text-align:right;\"> 9.15 </td>\n   <td style=\"text-align:right;\"> 0.66 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Ventas </td>\n   <td style=\"text-align:right;\"> 2020 </td>\n   <td style=\"text-align:right;\"> 100 </td>\n   <td style=\"text-align:right;\"> 70.68 </td>\n   <td style=\"text-align:right;\"> 71.03 </td>\n   <td style=\"text-align:right;\"> 8.89 </td>\n   <td style=\"text-align:right;\"> 0.33 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Ventas </td>\n   <td style=\"text-align:right;\"> 2021 </td>\n   <td style=\"text-align:right;\"> 100 </td>\n   <td style=\"text-align:right;\"> 75.28 </td>\n   <td style=\"text-align:right;\"> 75.48 </td>\n   <td style=\"text-align:right;\"> 6.91 </td>\n   <td style=\"text-align:right;\"> 0.52 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Ventas </td>\n   <td style=\"text-align:right;\"> 2022 </td>\n   <td style=\"text-align:right;\"> 100 </td>\n   <td style=\"text-align:right;\"> 79.06 </td>\n   <td style=\"text-align:right;\"> 79.65 </td>\n   <td style=\"text-align:right;\"> 11.57 </td>\n   <td style=\"text-align:right;\"> 0.66 </td>\n  </tr>\n</tbody>\n</table>\n\n\n\nPanel de visualizaciones usando faceting\n:::\n:::\n\n\n**Elementos clave del faceting:**\n1. **Comparación**: Facilita la comparación entre subgrupos\n2. **Contexto**: Mantiene la consistencia en escalas\n3. **Patrones**: Revela tendencias y diferencias\n4. **Integración**: Combina múltiples perspectivas\n\n### 3.3 Gráficos de Waffle para Proporciones\n\nLos gráficos de waffle son una alternativa interesante a los gráficos de pie para mostrar proporciones:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Crear datos de proporciones\ndatos_proporcion <- datos_panel %>%\n  group_by(departamento, categoria) %>%\n  summarise(n = n()) %>%\n  mutate(prop = round(n/sum(n) * 100))\n\n# Crear gráfico de waffle por departamento\nwaffle_plots <- datos_proporcion %>%\n  split(.$departamento) %>%\n  map(function(dept) {\n    waffle::waffle(\n      c(setNames(dept$prop, dept$categoria)),\n      rows = 10,\n      size = 0.5,\n      colors = viridis(3),\n      title = unique(dept$departamento)\n    )\n  })\n\n# Combinar los gráficos\ngridExtra::grid.arrange(\n  grobs = waffle_plots,\n  ncol = 3,\n  top = \"Distribución de Categorías por Departamento\"\n)\n```\n\n::: {.cell-output-display}\n![Gráfico de waffle mostrando proporciones](index_files/figure-html/waffle-chart-1.png){width=768}\n:::\n:::\n\n\n**Ventajas de los gráficos de waffle:**\n1. Representación intuitiva de porcentajes\n2. Fácil comparación entre categorías\n3. Visualización de partes de un todo\n4. Alternativa atractiva a gráficos circulares\n\n\n## 4. Técnicas Avanzadas de Personalización\n\n### 4.1 Temas Personalizados y Consistencia Visual\n\nLa consistencia visual es crucial en la visualización de datos. Aprenderemos a crear y aplicar temas personalizados:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Creamos un tema personalizado\ntema_personalizado <- theme_minimal() +\n  theme(\n    # Títulos\n    plot.title = element_text(\n      face = \"bold\",\n      size = 16,\n      margin = margin(b = 20)\n    ),\n    plot.subtitle = element_text(\n      size = 12,\n      color = \"gray40\",\n      margin = margin(b = 10)\n    ),\n    # Ejes\n    axis.title = element_text(\n      face = \"bold\",\n      size = 11\n    ),\n    axis.text = element_text(\n      size = 10\n    ),\n    # Leyenda\n    legend.position = \"top\",\n    legend.title = element_text(face = \"bold\"),\n    # Fondo y líneas de grilla\n    panel.grid.major = element_line(color = \"gray90\"),\n    panel.grid.minor = element_blank(),\n    # Márgenes\n    plot.margin = margin(20, 20, 20, 20)\n  )\n\n# Creamos datos de ejemplo\ndatos_ejemplo <- tibble(\n  categoria = factor(rep(LETTERS[1:5], each = 3)),\n  subgrupo = rep(c(\"A\", \"B\", \"C\"), 5),\n  valor = sample(20:100, 15)\n)\n\n# Aplicamos el tema a diferentes tipos de gráficos\np1 <- ggplot(datos_ejemplo, \n             aes(x = categoria, y = valor, fill = subgrupo)) +\n  geom_col(position = \"dodge\") +\n  scale_fill_viridis_d() +\n  labs(\n    title = \"Gráfico de Barras con Tema Personalizado\",\n    subtitle = \"Ejemplo de consistencia visual\",\n    x = \"Categoría\",\n    y = \"Valor\"\n  ) +\n  tema_personalizado\n\np2 <- ggplot(datos_ejemplo, \n             aes(x = categoria, y = valor, color = subgrupo)) +\n  geom_point(size = 3) +\n  geom_line(aes(group = subgrupo)) +\n  scale_color_viridis_d() +\n  labs(\n    title = \"Gráfico de Líneas con Tema Personalizado\",\n    subtitle = \"Manteniendo la consistencia visual\",\n    x = \"Categoría\",\n    y = \"Valor\"\n  ) +\n  tema_personalizado\n\n# Mostramos los gráficos lado a lado\np1 / p2\n```\n\n::: {.cell-output-display}\n![Aplicación de temas personalizados](index_files/figure-html/temas-personalizados-1.png){width=768}\n:::\n:::\n\n\n### 4.2 Anotaciones y Capas Personalizadas\n\nLas anotaciones pueden mejorar significativamente la comprensión de nuestros gráficos:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Creamos datos con puntos de interés\ndatos_tendencia <- tibble(\n  año = 2015:2022,\n  valor = c(45, 52, 58, 60, 85, 75, 90, 88),\n  evento = c(\"\", \"\", \"Cambio 1\", \"\", \"Máximo\", \"\", \"Tendencia\", \"\")\n)\n\n# Creamos un gráfico con anotaciones\nggplot(datos_tendencia, aes(x = año, y = valor)) +\n  # Base del gráfico\n  geom_line(size = 1, color = \"steelblue\") +\n  geom_point(size = 3, color = \"steelblue\") +\n  \n  # Añadimos anotaciones para puntos específicos\n  geom_segment(\n    data = datos_tendencia %>% filter(evento != \"\"),\n    aes(\n      x = año,           # Punto inicial x\n      y = valor - 5,     # Punto inicial y\n      xend = año,        # Punto final x\n      yend = valor + 5   # Punto final y\n    ),\n    arrow = arrow(length = unit(0.2, \"cm\")),\n    color = \"gray40\"\n  ) +\n  \n  # Añadimos textos explicativos\n  geom_text(\n    data = datos_tendencia %>% filter(evento != \"\"),\n    aes(label = evento,\n        y = valor + 7),  # Movemos la posición y dentro del aes\n    size = 4\n  ) +\n  \n  # Personalizamos el diseño\n  scale_y_continuous(breaks = seq(40, 100, 10)) +\n  labs(\n    title = \"Evolución Temporal con Anotaciones\",\n    subtitle = \"Identificando puntos clave y eventos\",\n    x = \"Año\",\n    y = \"Valor\"\n  ) +\n  theme_minimal() +  # Usamos theme_minimal() en lugar de tema_personalizado\n  theme(\n    plot.title = element_text(face = \"bold\", size = 16),\n    plot.subtitle = element_text(size = 12, color = \"gray40\"),\n    axis.title = element_text(face = \"bold\"),\n    panel.grid.minor = element_blank()\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-11-1.png){width=768}\n:::\n:::\n\n\n### 4.3 Interactividad Avanzada con plotly\n\nLa interactividad puede añadir una capa adicional de información a nuestros gráficos:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Creamos datos más complejos\ndatos_interactivos <- tibble(\n  categoria = rep(c(\"A\", \"B\", \"C\"), each = 4),\n  subcategoria = rep(c(\"Q1\", \"Q2\", \"Q3\", \"Q4\"), 3),\n  valor = sample(50:100, 12),\n  tendencia = sample(c(\"↑\", \"↓\", \"→\"), 12, replace = TRUE)\n) %>%\n  mutate(\n    tooltip_texto = sprintf(\n      \"Categoría: %s<br>Período: %s<br>Valor: %d<br>Tendencia: %s\",\n      categoria, subcategoria, valor, tendencia\n    )\n  )\n\n# Creamos gráfico base con ggplot2\np <- ggplot(datos_interactivos, \n            aes(x = subcategoria, \n                y = valor, \n                fill = categoria,\n                text = tooltip_texto)) +\n  geom_col(position = \"dodge\") +\n  scale_fill_viridis_d() +\n  labs(\n    title = \"Evolución por Categoría y Período\",\n    x = \"Período\",\n    y = \"Valor\",\n    fill = \"Categoría\"\n  ) +\n  tema_personalizado\n\n# Convertimos a interactivo\nggplotly(p, tooltip = \"text\") %>%\n  layout(\n    hoverlabel = list(bgcolor = \"white\"),\n    showlegend = TRUE\n  )\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-0a09f2c65470bfad74ca\" style=\"width:100%;height:487px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-0a09f2c65470bfad74ca\">{\"x\":{\"data\":[{\"orientation\":\"v\",\"width\":[0.30000000000000004,0.30000000000000027,0.29999999999999982,0.29999999999999982],\"base\":[0,0,0,0],\"x\":[0.69999999999999996,1.7,2.7000000000000002,3.7000000000000002],\"y\":[63,84,57,96],\"text\":[\"Categoría: A<br>Período: Q1<br>Valor: 63<br>Tendencia: ↓\",\"Categoría: A<br>Período: Q2<br>Valor: 84<br>Tendencia: ↑\",\"Categoría: A<br>Período: Q3<br>Valor: 57<br>Tendencia: ↓\",\"Categoría: A<br>Período: Q4<br>Valor: 96<br>Tendencia: →\"],\"type\":\"bar\",\"textposition\":\"none\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(68,1,84,1)\",\"line\":{\"width\":1.8897637795275593,\"color\":\"transparent\"}},\"name\":\"A\",\"legendgroup\":\"A\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"orientation\":\"v\",\"width\":[0.29999999999999993,0.29999999999999982,0.29999999999999982,0.30000000000000027],\"base\":[0,0,0,0],\"x\":[1,2,3,4],\"y\":[81,99,56,82],\"text\":[\"Categoría: B<br>Período: Q1<br>Valor: 81<br>Tendencia: ↓\",\"Categoría: B<br>Período: Q2<br>Valor: 99<br>Tendencia: ↓\",\"Categoría: B<br>Período: Q3<br>Valor: 56<br>Tendencia: ↑\",\"Categoría: B<br>Período: Q4<br>Valor: 82<br>Tendencia: ↓\"],\"type\":\"bar\",\"textposition\":\"none\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(33,144,140,1)\",\"line\":{\"width\":1.8897637795275593,\"color\":\"transparent\"}},\"name\":\"B\",\"legendgroup\":\"B\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"orientation\":\"v\",\"width\":[0.29999999999999982,0.29999999999999982,0.29999999999999982,0.30000000000000071],\"base\":[0,0,0,0],\"x\":[1.3,2.2999999999999998,3.2999999999999998,4.2999999999999998],\"y\":[75,79,97,55],\"text\":[\"Categoría: C<br>Período: Q1<br>Valor: 75<br>Tendencia: ↓\",\"Categoría: C<br>Período: Q2<br>Valor: 79<br>Tendencia: →\",\"Categoría: C<br>Período: Q3<br>Valor: 97<br>Tendencia: ↑\",\"Categoría: C<br>Período: Q4<br>Valor: 55<br>Tendencia: ↑\"],\"type\":\"bar\",\"textposition\":\"none\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(253,231,37,1)\",\"line\":{\"width\":1.8897637795275593,\"color\":\"transparent\"}},\"name\":\"C\",\"legendgroup\":\"C\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":72.676352566763526,\"r\":26.567040265670411,\"b\":66.971080669710815,\"l\":64.757160647571624},\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"title\":{\"text\":\"<b> Evolución por Categoría y Período <\\/b>\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":21.253632212536321},\"x\":0,\"xref\":\"paper\"},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[0.40000000000000002,4.5999999999999996],\"tickmode\":\"array\",\"ticktext\":[\"Q1\",\"Q2\",\"Q3\",\"Q4\"],\"tickvals\":[1,2,3,4],\"categoryorder\":\"array\",\"categoryarray\":[\"Q1\",\"Q2\",\"Q3\",\"Q4\"],\"nticks\":null,\"ticks\":\"\",\"tickcolor\":null,\"ticklen\":3.6529680365296811,\"tickwidth\":0,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":13.283520132835205},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(229,229,229,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"<b> Período <\\/b>\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-4.9500000000000002,103.95],\"tickmode\":\"array\",\"ticktext\":[\"0\",\"25\",\"50\",\"75\",\"100\"],\"tickvals\":[0,25,50,75,100],\"categoryorder\":\"array\",\"categoryarray\":[\"0\",\"25\",\"50\",\"75\",\"100\"],\"nticks\":null,\"ticks\":\"\",\"tickcolor\":null,\"ticklen\":3.6529680365296811,\"tickwidth\":0,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":13.283520132835205},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(229,229,229,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"<b> Valor <\\/b>\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":true,\"legend\":{\"bgcolor\":null,\"bordercolor\":null,\"borderwidth\":0,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.68949771689498},\"title\":{\"text\":\"Categoría\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}}},\"hovermode\":\"closest\",\"barmode\":\"relative\",\"hoverlabel\":{\"bgcolor\":\"white\"}},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"6c754ecb7110\":{\"x\":{},\"y\":{},\"fill\":{},\"text\":{},\"type\":\"bar\"}},\"cur_data\":\"6c754ecb7110\",\"visdat\":{\"6c754ecb7110\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n\nGráfico interactivo con tooltips personalizados\n:::\n:::\n\n\n### 4.4 Gestión de Espacio y Composición\n\nLa gestión eficiente del espacio es crucial en visualizaciones complejas:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Creamos varios gráficos relacionados\np1 <- ggplot(datos_interactivos, \n             aes(x = subcategoria, y = valor)) +\n  geom_col(aes(fill = categoria)) +\n  scale_fill_viridis_d() +\n  labs(title = \"Vista General\") +\n  tema_personalizado\n\np2 <- ggplot(datos_interactivos, \n             aes(x = categoria, y = valor)) +\n  geom_boxplot(aes(fill = categoria)) +\n  scale_fill_viridis_d() +\n  labs(title = \"Distribución por Categoría\") +\n  tema_personalizado\n\np3 <- ggplot(datos_interactivos, \n             aes(x = subcategoria, y = valor, color = categoria)) +\n  geom_line(aes(group = categoria)) +\n  geom_point() +\n  scale_color_viridis_d() +\n  labs(title = \"Tendencias Temporales\") +\n  tema_personalizado\n\n# Componemos el layout\n(p1 + p2) / p3 +\n  plot_annotation(\n    title = \"Análisis Multidimensional de Datos Categóricos\",\n    subtitle = \"Diferentes perspectivas de los mismos datos\",\n    caption = \"Fuente: Datos de ejemplo\",\n    tag_levels = \"A\"\n  ) &\n  theme(plot.title = element_text(size = 20))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/composicion-avanzada-1.png){width=1152}\n:::\n:::\n\n\n**Elementos clave de la composición:**\n1. Jerarquía visual clara\n2. Uso eficiente del espacio\n3. Consistencia en el diseño\n4. Balance entre información y claridad\n\n\n## 5. Consideraciones de Accesibilidad y Mejores Prácticas\n\n### 5.1 Diseño Accesible con Paletas de Colores\n\nLa accesibilidad en visualización de datos es fundamental. Aprenderemos a crear gráficos que sean accesibles para personas con daltonismo:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Creamos datos de ejemplo\ndatos_accesibles <- tibble(\n  categoria = rep(LETTERS[1:6], each = 2),\n  grupo = rep(c(\"Grupo 1\", \"Grupo 2\"), 6),\n  valor = sample(20:100, 12)\n)\n\n# Función para crear gráficos con diferentes paletas\ncrear_grafico_accesible <- function(datos, palette_name, titulo) {\n  ggplot(datos, aes(x = categoria, y = valor, fill = grupo)) +\n    geom_bar(stat = \"identity\", position = \"dodge\") +\n    scale_fill_brewer(palette = palette_name) +  # Usamos paletas ColorBrewer\n    labs(\n      title = titulo,\n      subtitle = paste(\"Usando paleta\", palette_name),\n      x = \"Categoría\",\n      y = \"Valor\"\n    ) +\n    theme_minimal() +\n    theme(\n      plot.title = element_text(face = \"bold\"),\n      axis.title = element_text(face = \"bold\")\n    )\n}\n\n# Creamos múltiples versiones con diferentes paletas\np1 <- crear_grafico_accesible(datos_accesibles, \"Set2\", \"Paleta Set2 (Cualitativa)\")\np2 <- crear_grafico_accesible(datos_accesibles, \"RdBu\", \"Paleta RdBu (Divergente)\")\np3 <- crear_grafico_accesible(datos_accesibles, \"Paired\", \"Paleta Paired (Pareada)\")\n\n# Mostramos los gráficos\n(p1 | p2 | p3) +\n  plot_annotation(\n    title = \"Comparación de Paletas de Colores Accesibles\",\n    subtitle = \"Diferentes opciones para mejorar la accesibilidad\",\n    caption = \"Las paletas se han elegido considerando el daltonismo\"\n  )\n```\n\n::: {.cell-output-display}\n![Comparación de paletas de colores accesibles](index_files/figure-html/paletas-accesibles-1.png){width=768}\n:::\n\n```{.r .cell-code}\n# También podemos usar viridis que es accesible por defecto\np4 <- ggplot(datos_accesibles, \n             aes(x = categoria, y = valor, fill = grupo)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  scale_fill_viridis_d() +\n  labs(\n    title = \"Usando Paleta Viridis\",\n    subtitle = \"Óptima para accesibilidad y escala de grises\",\n    x = \"Categoría\",\n    y = \"Valor\"\n  ) +\n  theme_minimal()\n\n# Mostramos el gráfico con viridis\np4\n```\n\n::: {.cell-output-display}\n![Comparación de paletas de colores accesibles](index_files/figure-html/paletas-accesibles-2.png){width=768}\n:::\n:::\n\n\n### 5.2 Uso de Formas y Patrones\n\nNo solo dependemos del color para diferenciar categorías:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Creamos datos de ejemplo\ndatos_patrones <- tibble(\n  x = rep(1:5, 3),\n  y = rnorm(15, mean = 10, sd = 2),\n  grupo = rep(c(\"A\", \"B\", \"C\"), each = 5)\n)\n\n# Gráfico con formas diferentes\np1 <- ggplot(datos_patrones, \n             aes(x = x, y = y, shape = grupo, color = grupo)) +\n  geom_point(size = 4) +\n  geom_line(aes(linetype = grupo)) +\n  scale_shape_manual(values = c(16, 17, 15)) +\n  scale_linetype_manual(values = c(\"solid\", \"dashed\", \"dotted\")) +\n  labs(\n    title = \"Uso de Formas y Líneas\",\n    subtitle = \"Diferenciación mediante múltiples elementos visuales\",\n    x = \"Posición\",\n    y = \"Valor\"\n  ) +\n  theme_minimal()\n\n# Gráfico con patrones de relleno\n#install.packages(\"ggpattern\")\nlibrary(ggpattern)\ndatos_barras <- tibble(\n  categoria = LETTERS[1:4],\n  valor = sample(20:100, 4),\n  patron = letters[1:4]\n)\n\np2 <- ggplot(datos_barras, \n             aes(x = categoria, y = valor, fill = categoria, pattern = patron)) +\n  geom_bar_pattern(\n    stat = \"identity\",\n    pattern_fill = \"black\",\n    pattern_angle = 45,\n    pattern_density = 0.1,\n    pattern_spacing = 0.025,\n    position = \"identity\"\n  ) +\n  scale_pattern_manual(values = c(\"stripe\", \"circle\", \"crosshatch\", \"dot\")) +\n  labs(\n    title = \"Uso de Patrones de Relleno\",\n    subtitle = \"Diferenciación mediante texturas\",\n    x = \"Categoría\",\n    y = \"Valor\"\n  ) +\n  theme_minimal()\n\n# Mostramos los gráficos\np1 / p2\n```\n:::\n\n\n### 5.3 Diseño Claro y Legible\n\nLa claridad en la presentación es crucial:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Creamos datos de ejemplo\ndatos_clarity <- tibble(\n  mes = factor(month.abb[1:12], levels = month.abb[1:12]),\n  valor = sample(50:150, 12),\n  categoria = sample(c(\"Alto\", \"Medio\", \"Bajo\"), 12, replace = TRUE)\n)\n\n# Gráfico con diseño claro\nggplot(datos_clarity, \n       aes(x = mes, y = valor, fill = categoria)) +\n  geom_col() +\n  scale_fill_brewer(palette = \"Set2\") +\n  labs(\n    title = \"Ventas Mensuales por Categoría\",\n    subtitle = \"Ejemplo de diseño claro y legible\",\n    x = \"Mes\",\n    y = \"Valor de Ventas\",\n    fill = \"Nivel de Ventas\"\n  ) +\n  theme_minimal() +\n  theme(\n    # Títulos claros\n    plot.title = element_text(\n      size = 16, \n      face = \"bold\",\n      margin = margin(b = 10)\n    ),\n    plot.subtitle = element_text(\n      size = 12,\n      color = \"gray40\",\n      margin = margin(b = 20)\n    ),\n    # Ejes legibles\n    axis.text.x = element_text(\n      angle = 45,\n      hjust = 1,\n      size = 10\n    ),\n    axis.title = element_text(face = \"bold\"),\n    # Leyenda clara\n    legend.position = \"top\",\n    legend.title = element_text(face = \"bold\"),\n    # Grilla sutil\n    panel.grid.minor = element_blank(),\n    panel.grid.major = element_line(color = \"gray90\")\n  )\n```\n\n::: {.cell-output-display}\n![Ejemplo de diseño claro y legible](index_files/figure-html/diseno-claro-1.png){width=768}\n:::\n:::\n\n\n### 5.4 Documentación y Reproducibilidad\n\nEs importante documentar nuestro código y hacerlo reproducible:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Creamos una función reutilizable para gráficos de barras\ncrear_grafico_barras <- function(datos, \n                                var_x, \n                                var_y, \n                                var_fill = NULL,\n                                titulo = \"Gráfico de Barras\",\n                                subtitulo = NULL,\n                                x_lab = var_x,\n                                y_lab = var_y,\n                                palette = \"viridis\") {\n  \n  # Construimos la llamada aesthtics\n  if (is.null(var_fill)) {\n    aes_mapping <- aes_string(x = var_x, y = var_y)\n  } else {\n    aes_mapping <- aes_string(x = var_x, y = var_y, fill = var_fill)\n  }\n  \n  # Creamos el gráfico base\n  p <- ggplot(datos, aes_mapping) +\n    geom_col(position = \"dodge\", alpha = 0.8) +\n    labs(\n      title = titulo,\n      subtitle = subtitulo,\n      x = x_lab,\n      y = y_lab\n    ) +\n    theme_minimal() +\n    theme(\n      plot.title = element_text(face = \"bold\", size = 14),\n      axis.title = element_text(face = \"bold\"),\n      legend.position = \"top\"\n    )\n  \n  # Añadimos la paleta de colores si es necesario\n  if (!is.null(var_fill)) {\n    if (palette == \"viridis\") {\n      p <- p + scale_fill_viridis_d()\n    } else {\n      p <- p + scale_fill_brewer(palette = palette)\n    }\n  }\n  \n  return(p)\n}\n\n# Ejemplo de uso\ndatos_ejemplo <- tibble(\n  categoria = rep(LETTERS[1:4], each = 3),\n  subcategoria = rep(c(\"X\", \"Y\", \"Z\"), 4),\n  valor = sample(20:100, 12)\n)\n\n# Creamos varios gráficos usando la función\np1 <- crear_grafico_barras(\n  datos_ejemplo,\n  \"categoria\",\n  \"valor\",\n  titulo = \"Gráfico Simple\"\n)\n\np2 <- crear_grafico_barras(\n  datos_ejemplo,\n  \"categoria\",\n  \"valor\",\n  \"subcategoria\",\n  titulo = \"Gráfico con Grupos\",\n  palette = \"Set2\"\n)\n\n# Mostramos los gráficos\np1 / p2\n```\n\n::: {.cell-output-display}\n![Función reutilizable para gráficos](index_files/figure-html/funcion-grafico-1.png){width=768}\n:::\n:::\n\n\n# 6. Casos Prácticos y Aplicaciones Avanzadas\n\n## 6.1 Análisis de Encuestas\n\nVeamos cómo visualizar datos típicos de encuestas con múltiples variables categóricas:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123)\nn_encuestados <- 1000\n\n# Función para generar distribuciones diferentes por edad\ngenerar_satisfaccion <- function(grupo_edad) {\n  case_when(\n    grupo_edad == \"18-25\" ~ sample(c(\"Muy Baja\", \"Baja\", \"Media\", \"Alta\", \"Muy Alta\"),\n                                 1, prob = c(0.3, 0.3, 0.2, 0.1, 0.1)),\n    grupo_edad == \"26-35\" ~ sample(c(\"Muy Baja\", \"Baja\", \"Media\", \"Alta\", \"Muy Alta\"),\n                                 1, prob = c(0.1, 0.2, 0.4, 0.2, 0.1)),\n    grupo_edad == \"36-45\" ~ sample(c(\"Muy Baja\", \"Baja\", \"Media\", \"Alta\", \"Muy Alta\"),\n                                 1, prob = c(0.1, 0.1, 0.3, 0.3, 0.2)),\n    grupo_edad == \"46-55\" ~ sample(c(\"Muy Baja\", \"Baja\", \"Media\", \"Alta\", \"Muy Alta\"),\n                                 1, prob = c(0.05, 0.15, 0.2, 0.4, 0.2)),\n    grupo_edad == \"56+\" ~ sample(c(\"Muy Baja\", \"Baja\", \"Media\", \"Alta\", \"Muy Alta\"),\n                               1, prob = c(0.05, 0.1, 0.15, 0.3, 0.4))\n  )\n}\n\n# Función para generar distribuciones educativas diferentes por género\ngenerar_educacion <- function(genero) {\n  case_when(\n    genero == \"Femenino\" ~ sample(c(\"Básica\", \"Media\", \"Superior\", \"Postgrado\"),\n                                1, prob = c(0.1, 0.3, 0.4, 0.2)),\n    genero == \"Masculino\" ~ sample(c(\"Básica\", \"Media\", \"Superior\", \"Postgrado\"),\n                                 1, prob = c(0.2, 0.35, 0.3, 0.15)),\n    genero == \"Otro\" ~ sample(c(\"Básica\", \"Media\", \"Superior\", \"Postgrado\"),\n                            1, prob = c(0.05, 0.15, 0.5, 0.3))\n  )\n}\n\n# Creamos los datos con patrones más marcados\ndatos_encuesta <- tibble(\n  edad_grupo = sample(c(\"18-25\", \"26-35\", \"36-45\", \"46-55\", \"56+\"),\n                     n_encuestados, replace = TRUE,\n                     prob = c(0.25, 0.3, 0.2, 0.15, 0.1))\n) %>%\n  mutate(\n    genero = sample(c(\"Femenino\", \"Masculino\", \"Otro\"),\n                   n_encuestados, replace = TRUE,\n                   prob = c(0.45, 0.45, 0.1))\n  ) %>%\n  rowwise() %>%\n  mutate(\n    satisfaccion = generar_satisfaccion(edad_grupo),\n    educacion = generar_educacion(genero)\n  ) %>%\n  ungroup()\n\n# 1. Gráfico de satisfacción por edad mejorado\np1 <- ggplot(datos_encuesta,\n             aes(x = edad_grupo, fill = fct_rev(satisfaccion))) +  # Revertimos el orden para mejor visualización\n  geom_bar(position = \"fill\") +\n  scale_fill_brewer(palette = \"RdYlBu\") +  # Cambiamos a una paleta más contrastante\n  labs(\n    title = \"Niveles de Satisfacción por Grupo de Edad\",\n    subtitle = \"Nótese el incremento de satisfacción con la edad\",\n    x = \"Grupo de Edad\",\n    y = \"Proporción\",\n    fill = \"Nivel de\\nSatisfacción\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    plot.title = element_text(face = \"bold\", size = 12),\n    plot.subtitle = element_text(size = 10, color = \"gray40\"),\n    legend.position = \"right\",\n    panel.grid.major.x = element_blank()\n  )\n\n# 2. Gráfico de distribución educativa por género mejorado\np2 <- ggplot(datos_encuesta,\n             aes(x = genero, fill = fct_rev(educacion))) +  # Revertimos el orden\n  geom_bar(position = \"fill\") +\n  scale_fill_viridis_d(option = \"D\") +  # Usamos viridis para mejor contraste\n  labs(\n    title = \"Distribución del Nivel Educativo por Género\",\n    subtitle = \"Patrones educativos distintivos por género\",\n    x = \"Género\",\n    y = \"Proporción\",\n    fill = \"Nivel\\nEducativo\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 0),\n    plot.title = element_text(face = \"bold\", size = 12),\n    plot.subtitle = element_text(size = 10, color = \"gray40\"),\n    legend.position = \"right\",\n    panel.grid.major.x = element_blank()\n  )\n\n# Combinamos los gráficos\np1 / p2 +\n  plot_annotation(\n    title = \"Análisis Demográfico y Educativo\",\n    subtitle = \"Patrones distintivos en satisfacción y educación\",\n    caption = \"Basado en encuesta de 1,000 participantes\",\n    tag_levels = \"A\"\n  ) &\n  theme(\n    plot.title = element_text(size = 14, face = \"bold\"),\n    plot.subtitle = element_text(size = 11, color = \"gray40\"),\n    plot.margin = margin(10, 10, 10, 10)\n  )\n```\n\n::: {.cell-output-display}\n![Visualización de datos de encuesta](index_files/figure-html/analisis-encuestas-1.png){width=768}\n:::\n:::\n\n\n## 6.2 Análisis de Series Temporales Categóricas\n\nVeamos cómo visualizar datos temporales con componentes categóricos:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Creamos datos de series temporales\nfechas <- seq.Date(from = as.Date(\"2022-01-01\"),\n                  to = as.Date(\"2022-12-31\"),\n                  by = \"day\")\n\ndatos_tiempo <- tibble(\n  fecha = fechas,\n  mes = format(fecha, \"%B\"),\n  dia_semana = weekdays(fecha),\n  tipo_dia = ifelse(dia_semana %in% c(\"Saturday\", \"Sunday\"),\n                   \"Fin de semana\", \"Entre semana\"),\n  eventos = sample(c(\"Normal\", \"Especial\", \"Festivo\"),\n                  length(fechas),\n                  prob = c(0.8, 0.15, 0.05),\n                  replace = TRUE),\n  valor = rpois(length(fechas), lambda = 50) *\n    (1 + 0.5 * (tipo_dia == \"Fin de semana\")) *\n    (1 + 0.3 * (eventos != \"Normal\"))\n)\n\n# 1. Gráfico de calendario\n# Agregamos semana y día para el calendario\ndatos_tiempo <- datos_tiempo %>%\n  mutate(\n    semana = as.numeric(format(fecha, \"%V\")),\n    dia = as.numeric(format(fecha, \"%u\")),\n    valor_cat = cut(valor,\n                   breaks = quantile(valor, probs = seq(0, 1, 0.25)),\n                   labels = c(\"Bajo\", \"Medio-Bajo\", \"Medio-Alto\", \"Alto\"))\n  )\n\n# Creamos el gráfico de calendario\np1 <- ggplot(datos_tiempo,\n             aes(x = dia, y = semana, fill = valor_cat)) +\n  geom_tile(color = \"white\") +\n  scale_fill_viridis_d() +\n  scale_x_continuous(\n    breaks = 1:7,\n    labels = c(\"Lun\", \"Mar\", \"Mié\", \"Jue\", \"Vie\", \"Sáb\", \"Dom\")\n  ) +\n  labs(\n    title = \"Patrón Semanal de Valores\",\n    x = NULL,\n    y = \"Semana del Año\",\n    fill = \"Nivel\"\n  ) +\n  theme_minimal()\n\n# 2. Gráfico de violín por tipo de día y evento\np2 <- ggplot(datos_tiempo,\n             aes(x = tipo_dia, y = valor, fill = eventos)) +\n  geom_violin(alpha = 0.7) +\n  geom_boxplot(width = 0.2, alpha = 0.7) +\n  scale_fill_brewer(palette = \"Set2\") +\n  labs(\n    title = \"Distribución de Valores por Tipo de Día y Evento\",\n    x = NULL,\n    y = \"Valor\",\n    fill = \"Tipo de Evento\"\n  ) +\n  theme_minimal()\n\n# Combinamos los gráficos\np1 / p2 +\n  plot_annotation(\n    title = \"Análisis Temporal de Eventos\",\n    subtitle = \"Patrones semanales y distribución de valores\",\n    tag_levels = \"A\"\n  )\n```\n\n::: {.cell-output-display}\n![Visualización de series temporales categóricas](index_files/figure-html/series-temporales-1.png){width=768}\n:::\n:::\n\n\n## 6.3 Visualización de Redes Sociales\n\nVeamos cómo visualizar datos de redes sociales con características categóricas:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Creamos datos de red social simulados\nset.seed(123)\nn_nodos <- 30\n\n# Datos de nodos\nnodos <- tibble(\n  id = 1:n_nodos,\n  tipo = sample(c(\"Influencer\", \"Regular\", \"Nuevo\"), n_nodos,\n               prob = c(0.2, 0.6, 0.2), replace = TRUE),\n  actividad = sample(c(\"Alta\", \"Media\", \"Baja\"), n_nodos,\n                    prob = c(0.3, 0.5, 0.2), replace = TRUE),\n  tamaño = case_when(\n    tipo == \"Influencer\" ~ runif(n_nodos, 20, 30),\n    tipo == \"Regular\" ~ runif(n_nodos, 10, 20),\n    TRUE ~ runif(n_nodos, 5, 10)\n  )\n)\n\n# Crear conexiones\nenlaces <- tibble(\n  from = sample(1:n_nodos, 50, replace = TRUE),\n  to = sample(1:n_nodos, 50, replace = TRUE)\n) %>%\n  filter(from != to) %>%\n  distinct()\n\n# Crear grafo con tidygraph\ngrafo <- tbl_graph(nodes = nodos, edges = enlaces)\n\n# Visualizar con ggraph\nggraph(grafo, layout = \"fr\") +\n  geom_edge_link(alpha = 0.2) +\n  geom_node_point(aes(size = tamaño, \n                      color = tipo,\n                      shape = actividad),\n                  alpha = 0.8) +\n  scale_color_brewer(palette = \"Set2\") +\n  scale_size_continuous(range = c(3, 8)) +\n  labs(\n    title = \"Red Social de Usuarios\",\n    subtitle = \"Visualización de conexiones y características\",\n    color = \"Tipo de Usuario\",\n    size = \"Tamaño de Red\",\n    shape = \"Nivel de Actividad\"\n  ) +\n  theme_graph()\n```\n\n::: {.cell-output-display}\n![Visualización de datos de redes sociales](index_files/figure-html/redes-sociales-1.png){width=768}\n:::\n:::\n\n\n## 7. Recomendaciones Finales y Mejores Prácticas\n\n### 7.1 Elección del Tipo de Visualización\n\n1. **Para comparaciones entre categorías:**\n   - Gráficos de barras (pocas categorías)\n   - Lollipop charts (muchas categorías)\n   - Treemaps (jerarquías)\n\n2. **Para relaciones entre variables categóricas:**\n   - Gráficos de mosaico\n   - Heatmaps\n   - Diagramas de Sankey\n\n3. **Para datos temporales categóricos:**\n   - Gráficos de calendario\n   - Gráficos de líneas segmentados\n   - Streamgraphs\n\n### 7.2 Consideraciones de Diseño\n\n1. **Accesibilidad:**\n   - Usar paletas de colores amigables para daltónicos\n   - Incluir elementos redundantes (forma + color)\n   - Mantener alto contraste\n\n2. **Claridad:**\n   - Limitar el número de categorías mostradas\n   - Usar etiquetas claras y legibles\n   - Incluir títulos y subtítulos informativos\n\n3. **Interactividad:**\n   - Añadir cuando aporte valor\n   - Mantener la simplicidad\n   - Incluir tooltips informativos\n\n### 7.3 Recursos Adicionales\n\n1. **Libros Recomendados:**\n   - \"ggplot2: Elegant Graphics for Data Analysis\" por Hadley Wickham\n   - \"Fundamentals of Data Visualization\" por Claus O. Wilke\n   - \"R Graphics Cookbook\" por Winston Chang\n\n2. **Sitios Web:**\n   - [R Graph Gallery](https://www.r-graph-gallery.com/)\n   - [Tidyverse Documentation](https://www.tidyverse.org/)\n   - [R Color Brewer](https://colorbrewer2.org/)\n\n3. **Paquetes Útiles:**\n   - ggplot2: base de visualización\n   - ggthemes: temas adicionales\n   - plotly: interactividad\n   - ggridges: gráficos de ridgeline\n   - ggalluvial: diagramas de Sankey\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../../../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n<link href=\"../../../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../../../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"../../../site_libs/plotly-binding-4.10.4/plotly.js\"></script>\n<script src=\"../../../site_libs/typedarray-0.1/typedarray.min.js\"></script>\n<script src=\"../../../site_libs/jquery-3.5.1/jquery.min.js\"></script>\n<link href=\"../../../site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../../../site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n<link href=\"../../../site_libs/plotly-htmlwidgets-css-2.11.1/plotly-htmlwidgets.css\" rel=\"stylesheet\" />\n<script src=\"../../../site_libs/plotly-main-2.11.1/plotly-latest.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}