{
  "hash": "f428eb36e33fe5a0db6437ba181227fd",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Agent-Based Model: Asymmetric Trajectory Channeling in Labor Markets\"\nsubtitle: \"A Comprehensive Validation with Skills-Based Organizational Typology, Sensitivity Analysis, and Model Comparison\"\nauthor:\n  - name: \"Roberto Cantillan & Mauricio Bucca\"\n    affiliations:\n      - name: \"Department of Sociology, PUC\"\n        address: \"Santiago, Chile\"\n\ndate: today\nbibliography: paper_skills_diffusion.bib\n#csl: apa.csl # Explicitly define CSL for consistent styling\ncategories:\n  - R\n  - Agent-Based Modeling\n  - Diffusion Theory\n  - Stratification\n  - Inequality\n  - Labor Markets\n\nimage: \"featured.jpg\"\ntitle-block-banner: featured.jpg\ntitle-block-banner-color: \"rgba(0, 0, 0, 0.8)\"\ntitle-block-style: default\n---\n\n\n\n\n\nThis Enhanced Agent-Based Model (ABM) provides a **comprehensive generative validation** of our theoretical framework on **asymmetric trajectory channeling** in labor markets. Through multiple robustness tests, sensitivity analysis, and model comparisons, we demonstrate that organizational imitation under uncertainty, filtered by the **cultural theorization of skill types** [@strang_institutional_1993], is **generatively sufficient** to produce empirically observed macro-level patterns of skills-based stratification. The enhanced model incorporates **skills-based organizational heterogeneity** reflecting contemporary workforce transformation, systematic parameter testing, and null model comparisons, revealing that **aspirational hunger by low-status organizations** drives cognitive skill channeling while **structural constraints** contain physical skill diffusion. This work strengthens the **causal inference** that cultural filtering through theorization is a necessary and robust mechanism driving stratification reproduction.\n\n**Keywords:** Agent-Based Modeling, Cultural Theorization, Causal Inference, Generative Sufficiency, Organizational Imitation, Skills-Based Stratification, Computational Social Science\n\n# Theoretical Framework: From Employer Decisions to Labor Market Structure\n\nThe architecture of inequality in the U.S. labor market is not a static blueprint but an actively reproduced, dynamic process. Its foundations lie in the everyday decisions of **employers within organizations**, who determine which skill requirements to establish for the occupations they manage. Foundational studies have demonstrated that the skill landscape itself is starkly polarized into two distinct domains—a socio-cognitive cluster associated with high wages and a sensory-physical one with low wages [@alabdulkareem_unpacking_2018]—and that this space has a nested, hierarchical architecture [@hosseinioun_skill_2025]. This structural view aligns with recent findings in intergenerational mobility research, which conceptualize occupations not as monolithic categories but as complex bundles of gradational characteristics, where it is often the underlying traits, rather than the job title itself, that are transmitted across generations [@york_gradationalism_2025].\n\n## The Micro-Foundations of Organizational Imitation\n\nContemporary labor markets exhibit a fundamental paradox: unprecedented dynamism coexists with persistent occupational stratification [@kalleberg_good_2013; @tilly_durable_2009]. Early studies of diffusion often focused on the spread of a single innovation through a homogenous population. More recent work, however, recognizes that diffusion is fundamentally structured by networks and heterogeneity. Practices do not diffuse randomly or uniformly; they follow patterned trajectories shaped by organizational, cultural, and institutional constraints [@strang_diffusion_1998].\n\nWe extend this insight by arguing that **employers imitate skill requirements according to fundamentally different logics depending on the type of skill in question**. The literature suggests three key mechanisms that drive one organization to adopt the practices of another:\n\n1.  **Uncertainty and Bounded Rationality:** Under conditions of uncertainty about the relationship between means and ends, organizations often imitate others as a decision-making shortcut. Rather than calculating an optimal solution from scratch, imitation offers a viable solution with reduced search costs [@cyert_behavioral_2006; @dimaggio_iron_1983].\n\n2.  **Prestige and Status-Seeking:** Imitation is not just a response to uncertainty, but also a strategy to gain legitimacy and status. Organizations do not imitate just anyone; they emulate those they perceive to be more successful or prestigious [@strang_search_2001; @bail_prestige_2019]. This process of \"adaptive emulation\" [@strang_search_2001], driven by \"success stories,\" creates an inherent directional bias in diffusion, where practices flow from high-status to low-status actors.\n\n3.  **Proximity and Network Structure:** Influence is not global but is channeled through social and structural networks. The likelihood that one organization imitates another is strongly conditioned by proximity, whether geographic, social, or cultural [@hedstrom_contagious_1994; @strang_spatial_1993]. Actors are more influenced by their peers, direct competitors, or those with whom they maintain dense relationships.\n\n## Dual-Process Theory of Skill Diffusion: The Role of Theorization\n\nOur key theoretical innovation is that the **content** of a skill—how it is culturally **theorized** [@strang_institutional_1993]—determines which of these micro-foundations becomes dominant. **Theorization** refers to the development and specification of abstract categories that justify and provide meaning to organizational practices. According to Strang & Meyer (1993), theorization involves two key processes: (1) the definition of a general organizational problem, and (2) the justification of a formal structural arrangement as a solution to that problem.\n\nWe argue that organizations filter and evaluate potential practices through two qualitatively different diffusion logics based on how skills are **theorized**:\n\n**Cognitive Skills as Portable Assets:** Cognitive skills (analytical, interpersonal, managerial) are **theorized** as **nested capabilities**: they are abstract, broadly applicable, and perceived as portable assets associated with growth, learning, and adaptability. This theorization frames cognitive skills as generalizable solutions to organizational problems of innovation and competitiveness. Under uncertainty, employers look toward **prestigious exemplars** [@strang_learning_2010] that signal success and modernity. As a result, the diffusion of cognitive skills is driven primarily by **aspirational emulation**. They tend to diffuse **upward** through the occupational status hierarchy as organizations seek to imitate their high-status peers.\n\n**Physical Skills as Context-Dependent Competencies:** In contrast, physical skills (manual, motor) are **theorized** as **context-dependent competencies**: they are tied to specific material settings, bodily execution, and legacy institutional constraints. This theorization frames physical skills as functionally specific solutions to particular operational problems. They are less likely to be read as generalizable templates for upward mobility. Instead, their diffusion is based on functional rather than aspirational considerations. Therefore, the diffusion of physical skills is governed mainly by **proximity and functional need**, showing less directional bias or even **containment effects** within their current status segments.\n\nThis bifurcation in diffusion logics based on **cultural theorization** is what we call **Asymmetric Trajectory Channeling**.\n\n## Model Architecture: Skills-Based Organizational Heterogeneity\n\nThis enhanced version incorporates contemporary **Skills-Based Organization (SBO) theory** to provide rigorous theoretical grounding for organizational heterogeneity. Recent research by Deloitte (2022-2024) identifies a fundamental transformation in how organizations approach work and talent management.\n\n### **Skills-Based vs Jobs-Based Organizational Typology:**\n\n**Skills-Based Organizations (SBOs):** Organizations that structure work around dynamic skill deployment rather than static job descriptions. These organizations:\n\n- Make talent decisions based on demonstrated skills rather than job titles\n- Emphasize skill development and redeployment across functions\n- Adopt fluid, project-based work arrangements\n- Show higher agility and adaptation capabilities\n- Are 79% more likely to provide positive workforce experiences\n\n**Jobs-Based Organizations (JBOs):** Traditional organizations that structure work around fixed job categories. These organizations:\n\n- Make talent decisions based on job titles and formal qualifications\n- Emphasize role-specific competencies within departmental boundaries  \n- Maintain rigid hierarchical structures\n- Show slower adaptation to changing skill demands\n- Focus on job-level performance metrics\n\n**Hybrid Organizations:** Organizations experimenting with skills-based practices in some areas while maintaining jobs-based structures in others.\n\n### **Model Features:**\n\n1. **Theoretically-Grounded Organizational Types:** Organizations are classified by their approach to skill management, providing direct relevance to skill diffusion processes.\n\n2. **Systematic Robustness Testing:** Comprehensive sensitivity analysis across parameter space and comparison against null, reversed, and random alternatives.\n\n3. **Enhanced Reference Group Mechanisms:** Type-specific reference group selection reflecting both **theorization processes** and organizational skill orientations.\n\n4. **System-Level Validation:** Multiple validation layers including temporal dynamics, parameter sensitivity, and mechanism necessity tests.\n\n## From Structure to Process: An Enhanced ABM for Causal Inference\n\nOur approach connects two modes of causal inquiry through multiple validation strategies. The structural form of our **Piecewise Dual Process Model** expresses the diffusion likelihood as:\n\n$$\\text{logit}\\, P_{i \\to j}^{(c)} = \\theta_{0c} - \\lambda_c d_{ij} - \\beta_c^+ \\Delta^+_{ij} - \\beta_c^- \\Delta^-_{ij} - \\omega_c w_{ij}$$\n\nWhere $\\Delta^+_{ij} = \\max(0, s_j - s_i)$ and $\\Delta^-_{ij} = \\max(0, s_i - s_j)$ represent non-overlapping upward and downward status shifts.\n\nOur enhanced ABM translates this structural equation into **organizational-level decision processes** with skills-based heterogeneity:\n\n```\nUncertainty → Skills-Based Response → Cultural Theorization → Asymmetric Channeling → Stratification\n```\n\nOrganizations facing skill uncertainty respond according to their skills-based orientation. **Cultural theorization** of skill types systematically biases this response, generating distinct diffusion trajectories that, when aggregated, reproduce the macro-level structure of stratification.\n\n::: {.callout-note title=\"Enhanced Methodological Positioning\"}\nThis ABM provides:\n\n-   **Theoretical Rigor:** Grounded in Strang's theorization theory with contemporary skills-based organizational typology\n-   **Mechanism Validation:** Null model comparisons prove the necessity of cultural theorization\n-   **Parameter Robustness:** Systematic sensitivity analysis demonstrates stability across parameter choices\n-   **Generative Sufficiency:** Multiple model variants confirm that only theorization-based mechanisms produce the observed patterns\n:::\n\n# Agent-Based Model Implementation\n\n## Setup and Libraries\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsuppressPackageStartupMessages({\n  library(tidyverse)\n  library(igraph)\n  library(data.table)\n  library(ggplot2)\n  library(gridExtra)\n  library(knitr)\n  library(kableExtra)\n  library(scales)\n  library(patchwork)\n  library(zoo)\n})\n\n# Enhanced theme for professional plots with LARGE TEXT\ntheme_abm_professional <- function(base_size = 18) {\n  theme_minimal(base_size = base_size) +\n    theme(\n      plot.title = element_text(size = rel(1.3), face = \"bold\", hjust = 0, \n                               margin = margin(b = 12), color = \"grey15\"),\n      plot.subtitle = element_text(size = rel(1.0), color = \"grey40\", hjust = 0, \n                                  margin = margin(b = 15), lineheight = 1.2),\n      axis.title.x = element_text(face = \"bold\", size = rel(1.1), \n                                 margin = margin(t = 15), color = \"grey15\"),\n      axis.title.y = element_text(face = \"bold\", size = rel(1.1), \n                                 margin = margin(r = 15), color = \"grey15\"),\n      axis.text.x = element_text(size = rel(0.95), color = \"grey25\"),\n      axis.text.y = element_text(size = rel(0.95), color = \"grey25\"),\n      legend.title = element_text(face = \"bold\", size = rel(1.0), color = \"grey15\"),\n      legend.text = element_text(size = rel(0.9), color = \"grey25\"),\n      legend.position = \"bottom\",\n      legend.margin = margin(t = 20),\n      panel.grid.major = element_line(color = \"grey92\", linewidth = 0.6),\n      panel.grid.minor = element_blank(),\n      strip.text = element_text(face = \"bold\", size = rel(1.0), color = \"grey15\"),\n      plot.caption = element_text(color = \"grey55\", hjust = 1, size = rel(0.8)),\n      plot.margin = margin(25, 25, 25, 25)\n    )\n}\ntheme_set(theme_abm_professional())\n\n# Enhanced color palette\nskill_colors <- c(\"cognitive\" = \"#2E86C1\", \"physical\" = \"#E74C3C\")\nmodel_colors <- c(\"theoretical\" = \"#27AE60\", \"strong_null\" = \"#85929E\", \n                 \"proper_reversed\" = \"#F39C12\", \"structural_control\" = \"#9B59B6\")\norg_colors <- c(\"skills_based\" = \"#1ABC9C\", \"jobs_based\" = \"#E67E22\", \"hybrid\" = \"#9B59B6\")\n\nset.seed(42)\n```\n:::\n\n\n\n## Parameter System\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Enhanced parameter system with theoretical grounding\nDEFAULT_PARAMS <- list(\n  N_ORGS = 200,\n  N_SKILLS = 20,\n  N_ITERATIONS = 120,\n  uncertainty_rate = 0.15,\n  imitation_rate = 0.6,\n  cognitive_ratio = 0.5,\n  cultural_strength = 0.8,\n  status_sensitivity = 1.0,\n  proximity_threshold = 1.5,\n  status_bonus_cognitive = 0.2,\n  proximity_penalty_physical = 0.3\n)\n\n# Global parameters\nPARAMS <- DEFAULT_PARAMS\nCOGNITIVE_SKILLS <- NULL\nPHYSICAL_SKILLS <- NULL\n\n# Function to set simulation parameters\nset_simulation_params <- function(params = DEFAULT_PARAMS) {\n  PARAMS <<- params\n  COGNITIVE_SKILLS <<- 1:floor(params$N_SKILLS * params$cognitive_ratio)\n  PHYSICAL_SKILLS <<- (length(COGNITIVE_SKILLS) + 1):params$N_SKILLS\n  invisible(PARAMS)\n}\n\n# Initialize with default parameters\nset_simulation_params()\n```\n:::\n\n\n\n## Agent Architecture: Skills-Based Organizations\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncreate_skills_based_organization <- function(id, org_type = NULL) {\n  # Organizations classified by skills-based orientation (Deloitte 2022-2024)\n  if (is.null(org_type)) {\n    org_type <- sample(c(\"skills_based\", \"jobs_based\", \"hybrid\"),\n                       1, prob = c(0.25, 0.50, 0.25))  # Reflecting current adoption rates\n  }\n  \n  # Skills-based organization parameters based on Deloitte research\n  sbo_params <- switch(org_type,\n    \"skills_based\" = list(\n      # High skill focus, agile, experience-driven\n      cultural_strength = runif(1, 0.8, 1.0),      # Strong cultural theorization\n      status_aspiration = runif(1, 0.7, 0.9),      # High aspiration for innovation\n      uncertainty_tolerance = runif(1, 0.6, 0.9),  # High tolerance (agile mindset)\n      imitation_propensity = runif(1, 0.7, 0.9),   # High imitation (best practices)\n      skill_focus = runif(1, 0.8, 1.0),            # High skill focus\n      adaptability = runif(1, 0.7, 0.9)            # High adaptability\n    ),\n    \"jobs_based\" = list(\n      # Low skill focus, traditional, hierarchy-driven\n      cultural_strength = runif(1, 0.4, 0.6),      # Moderate cultural theorization\n      status_aspiration = runif(1, 0.3, 0.6),      # Moderate aspiration\n      uncertainty_tolerance = runif(1, 0.2, 0.5),  # Low tolerance (risk averse)\n      imitation_propensity = runif(1, 0.4, 0.6),   # Moderate imitation\n      skill_focus = runif(1, 0.2, 0.4),            # Low skill focus\n      adaptability = runif(1, 0.3, 0.5)            # Low adaptability\n    ),\n    \"hybrid\" = list(\n      # Medium skill focus, transitioning, mixed approaches\n      cultural_strength = runif(1, 0.6, 0.8),      # Moderate-high cultural theorization\n      status_aspiration = runif(1, 0.5, 0.8),      # Moderate-high aspiration\n      uncertainty_tolerance = runif(1, 0.4, 0.7),  # Moderate tolerance\n      imitation_propensity = runif(1, 0.5, 0.8),   # Moderate-high imitation\n      skill_focus = runif(1, 0.5, 0.7),            # Moderate skill focus\n      adaptability = runif(1, 0.5, 0.7)            # Moderate adaptability\n    )\n  )\n  \n  # Status generation by organizational type (based on performance research)\n  status_by_type <- switch(org_type,\n    \"skills_based\" = rnorm(1, 0.3, 0.7),    # Often higher performing\n    \"jobs_based\" = rnorm(1, -0.2, 0.6),     # Often lower performing\n    \"hybrid\" = rnorm(1, 0.0, 0.8)           # Variable performance\n  )\n  \n  # Initial skill endowment by type\n  initial_skill_prob <- switch(org_type,\n    \"skills_based\" = 0.6,     # Rich, diverse skill sets\n    \"jobs_based\" = 0.3,       # Limited, role-specific skills\n    \"hybrid\" = 0.45           # Moderate skill diversity\n  )\n  \n  list(\n    id = id,\n    org_type = org_type,\n    status = status_by_type,\n    skills = rbinom(PARAMS$N_SKILLS, 1, initial_skill_prob),\n    uncertainty = rep(0, PARAMS$N_SKILLS),\n    sbo_params = sbo_params,\n    adoption_history = list(),\n    success_rate = 0.5,\n    cultural_theory = list(\n      cognitive_portable = sbo_params$cultural_strength,\n      physical_contextual = sbo_params$cultural_strength\n    )\n  )\n}\n\n# Create skills-based population\ncreate_skills_based_population <- function() {\n  organizations <- map(1:PARAMS$N_ORGS, create_skills_based_organization)\n  organizations <- organizations[order(map_dbl(organizations, ~ .x$status))]\n  return(organizations)\n}\n\n# Create structural control organizations (neutralized heterogeneity)\ncreate_STRUCTURAL_CONTROL_organization <- function(id) {\n  uniform_params <- list(\n    cultural_strength = 0.7, status_aspiration = 0.5, uncertainty_tolerance = 0.5,\n    imitation_propensity = 0.6, skill_focus = 0.5, adaptability = 0.5\n  )\n  list(\n    id = id, org_type = \"neutral\", status = rnorm(1, 0.0, 0.3),\n    skills = rbinom(PARAMS$N_SKILLS, 1, 0.4), uncertainty = rep(0, PARAMS$N_SKILLS),\n    sbo_params = uniform_params,\n    cultural_theory = list(cognitive_portable = 0.7, physical_contextual = 0.7)\n  )\n}\n```\n:::\n\n\n\n## Reference Groups and Decision Mechanisms\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# THEORETICAL MODEL: Skills-based reference groups\nidentify_reference_groups_skills_based <- function(org_id, skill_type, organizations) {\n  focal_org <- organizations[[org_id]]\n  \n  if (skill_type == \"cognitive\") {\n    # Cognitive skills: Aspirational logic moderated by skills-based orientation\n    if (focal_org$org_type == \"skills_based\") {\n      potential_refs <- which(map_chr(organizations, ~ .x$org_type) %in% c(\"skills_based\", \"hybrid\") &\n                             map_dbl(organizations, ~ .x$status) > quantile(map_dbl(organizations, ~ .x$status), 0.4))\n    } else if (focal_org$org_type == \"hybrid\") {\n      potential_refs <- which(map_chr(organizations, ~ .x$org_type) == \"skills_based\" |\n                             (map_chr(organizations, ~ .x$org_type) == \"hybrid\" & \n                              map_dbl(organizations, ~ .x$status) > focal_org$status))\n    } else { # jobs_based\n      potential_refs <- which(map_dbl(organizations, ~ .x$status) > focal_org$status)\n    }\n    \n    potential_refs <- setdiff(potential_refs, org_id)\n    if (length(potential_refs) == 0) potential_refs <- setdiff(1:length(organizations), org_id)\n    \n    ref_status <- map_dbl(organizations[potential_refs], ~ .x$status)\n    focal_status <- focal_org$status\n    higher_status <- potential_refs[ref_status > focal_status]\n    \n    if (length(higher_status) == 0) return(sample(potential_refs, min(5, length(potential_refs))))\n    if (length(higher_status) == 1) return(higher_status)\n    \n    status_distances <- map_dbl(organizations[higher_status], ~ .x$status - focal_status)\n    skill_weights <- map_dbl(organizations[higher_status], function(org) {\n      switch(org$org_type, \"skills_based\" = 1.5, \"hybrid\" = 1.2, \"jobs_based\" = 1.0)\n    })\n    \n    weights <- (1 / (1 + status_distances^2)) * skill_weights\n    weights <- weights / sum(weights)\n    n_to_sample <- min(8, length(higher_status))\n    reference_pool <- sample(higher_status, n_to_sample, prob = weights, replace = FALSE)\n    \n  } else {\n    # Physical skills: Proximity logic with functional considerations\n    focal_status <- focal_org$status; all_status <- map_dbl(organizations, ~ .x$status)\n    same_type_orgs <- which(map_chr(organizations, ~ .x$org_type) == focal_org$org_type)\n    same_type_orgs <- setdiff(same_type_orgs, org_id)\n    \n    if (length(same_type_orgs) >= 3) {\n      within_proximity <- same_type_orgs[abs(all_status[same_type_orgs] - focal_status) <= PARAMS$proximity_threshold]\n    } else {\n      within_proximity <- which(abs(all_status - focal_status) <= PARAMS$proximity_threshold & 1:length(organizations) != org_id)\n    }\n    \n    if (length(within_proximity) == 0) {\n      status_distances <- abs(all_status - focal_status); status_distances[org_id] <- Inf\n      within_proximity <- order(status_distances)[1:min(5, length(organizations)-1)]\n    }\n    reference_pool <- within_proximity\n  }\n  return(reference_pool)\n}\n\n# STRONG NULL MODEL: Pure randomization\nidentify_reference_groups_STRONG_NULL <- function(org_id, skill_type, organizations) {\n  potential_refs <- setdiff(1:length(organizations), org_id)\n  if (length(potential_refs) == 0) return(numeric(0))\n  n_to_sample <- min(sample(5:8, 1), length(potential_refs))\n  return(sample(potential_refs, n_to_sample, replace = FALSE))\n}\n\n# PROPER REVERSED MODEL: Flip theorization logic\nidentify_reference_groups_PROPER_REVERSED <- function(org_id, skill_type, organizations) {\n  reversed_skill_type <- ifelse(skill_type == \"cognitive\", \"physical\", \"cognitive\")\n  identify_reference_groups_skills_based(org_id, reversed_skill_type, organizations)\n}\n\n# STRUCTURAL CONTROL MODEL: Reduced organizational heterogeneity\nidentify_reference_groups_STRUCTURAL_CONTROL <- function(org_id, skill_type, organizations) {\n  focal_org <- organizations[[org_id]]\n  if (skill_type == \"cognitive\") {\n    potential_refs <- which(map_dbl(organizations, ~ .x$status) > focal_org$status)\n    potential_refs <- setdiff(potential_refs, org_id)\n    if (length(potential_refs) == 0) potential_refs <- setdiff(1:length(organizations), org_id)\n    if (length(potential_refs) == 0) return(numeric(0))\n    \n    higher_status <- potential_refs[map_dbl(organizations[potential_refs], ~ .x$status) > focal_org$status]\n    if (length(higher_status) == 0) return(sample(potential_refs, min(5, length(potential_refs))))\n    if (length(higher_status) == 1) return(higher_status)\n    \n    status_distances <- map_dbl(organizations[higher_status], ~ .x$status - focal_org$status)\n    weights <- (1 / (1 + status_distances^1.5))  # Less steep than theoretical\n    return(sample(higher_status, min(8, length(higher_status)), prob = weights, replace = FALSE))\n  } else {\n    focal_status <- focal_org$status; all_status <- map_dbl(organizations, ~ .x$status)\n    within_proximity <- which(abs(all_status - focal_status) <= PARAMS$proximity_threshold & 1:length(organizations) != org_id)\n    if (length(within_proximity) == 0) {\n      status_distances <- abs(all_status - focal_status); status_distances[org_id] <- Inf\n      within_proximity <- order(status_distances)[1:min(5, length(organizations) - 1)]\n    }\n    return(within_proximity)\n  }\n}\n\n# IMITATION DECISION FUNCTIONS\nmake_imitation_decision_skills_based <- function(org_id, skill_id, reference_orgs, organizations) {\n  focal_org <- organizations[[org_id]]; skill_type <- ifelse(skill_id %in% COGNITIVE_SKILLS, \"cognitive\", \"physical\")\n  reference_usage <- map_dbl(organizations[reference_orgs], ~ .x$skills[skill_id])\n  usage_rate <- mean(reference_usage); mean_ref_status <- mean(map_dbl(organizations[reference_orgs], ~ .x$status))\n  \n  if (skill_type == \"cognitive\") {\n    base_probability <- focal_org$sbo_params$cultural_strength * PARAMS$cultural_strength * usage_rate\n    status_gap <- mean_ref_status - focal_org$status\n    aspiration_bonus <- focal_org$sbo_params$status_aspiration * PARAMS$status_bonus_cognitive * pmax(0, status_gap)\n    skill_focus_bonus <- focal_org$sbo_params$skill_focus * 0.15\n    imitation_prob <- pmax(0, pmin(1, base_probability + aspiration_bonus + skill_focus_bonus))\n  } else {\n    base_probability <- focal_org$sbo_params$cultural_strength * PARAMS$cultural_strength * usage_rate\n    status_distance <- abs(mean_ref_status - focal_org$status)\n    proximity_penalty <- PARAMS$proximity_penalty_physical * status_distance\n    same_type_count <- sum(map_chr(organizations[reference_orgs], ~ .x$org_type) == focal_org$org_type)\n    functional_bonus <- (same_type_count / length(reference_orgs)) * 0.15\n    imitation_prob <- pmax(0, pmin(1, base_probability - proximity_penalty + functional_bonus))\n  }\n  \n  adopt <- rbinom(1, 1, imitation_prob)\n  decision_record <- list(skill_id = skill_id, skill_type = skill_type, org_type = focal_org$org_type,\n                         adopted = adopt, status_gap = mean_ref_status - focal_org$status)\n  return(list(adopt = adopt, record = decision_record))\n}\n\nmake_imitation_decision_STRONG_NULL <- function(org_id, skill_id, reference_orgs, organizations) {\n  focal_org <- organizations[[org_id]]\n  mean_ref_status <- mean(map_dbl(organizations[reference_orgs], ~ .x$status))\n  imitation_prob <- pmax(0, pmin(1, 0.3 + runif(1, -0.1, 0.1)))  # Random baseline\n  adopt <- rbinom(1, 1, imitation_prob)\n  decision_record <- list(skill_id = skill_id, skill_type = ifelse(skill_id %in% COGNITIVE_SKILLS, \"cognitive\", \"physical\"),\n                         adopted = adopt, status_gap = mean_ref_status - focal_org$status)\n  return(list(adopt = adopt, record = decision_record))\n}\n\nmake_imitation_decision_PROPER_REVERSED <- function(org_id, skill_id, reference_orgs, organizations) {\n  # Use flipped skill type logic but return correct skill_id\n  reversed_skill_type <- ifelse(skill_id %in% COGNITIVE_SKILLS, \"physical\", \"cognitive\")\n  temp_skill_id <- ifelse(reversed_skill_type == \"cognitive\", COGNITIVE_SKILLS[1], PHYSICAL_SKILLS[1])\n  result <- make_imitation_decision_skills_based(org_id, temp_skill_id, reference_orgs, organizations)\n  result$record$skill_id <- skill_id\n  result$record$skill_type <- ifelse(skill_id %in% COGNITIVE_SKILLS, \"cognitive\", \"physical\")\n  return(result)\n}\n\nmake_imitation_decision_STRUCTURAL_CONTROL <- function(org_id, skill_id, reference_orgs, organizations) {\n  focal_org <- organizations[[org_id]]; skill_type <- ifelse(skill_id %in% COGNITIVE_SKILLS, \"cognitive\", \"physical\")\n  usage_rate <- mean(map_dbl(organizations[reference_orgs], ~ .x$skills[skill_id]))\n  mean_ref_status <- mean(map_dbl(organizations[reference_orgs], ~ .x$status))\n  base_probability <- focal_org$sbo_params$cultural_strength * PARAMS$cultural_strength * usage_rate\n  \n  if (skill_type == \"cognitive\") {\n    status_gap <- mean_ref_status - focal_org$status\n    aspiration_bonus <- focal_org$sbo_params$status_aspiration * PARAMS$status_bonus_cognitive * pmax(0, status_gap)\n    imitation_prob <- pmax(0, pmin(1, base_probability + aspiration_bonus))\n  } else {\n    status_distance <- abs(mean_ref_status - focal_org$status)\n    proximity_penalty <- PARAMS$proximity_penalty_physical * status_distance\n    imitation_prob <- pmax(0, pmin(1, base_probability - proximity_penalty))\n  }\n  \n  adopt <- rbinom(1, 1, imitation_prob)\n  decision_record <- list(skill_id = skill_id, skill_type = skill_type, adopted = adopt, \n                         status_gap = mean_ref_status - focal_org$status)\n  return(list(adopt = adopt, record = decision_record))\n}\n```\n:::\n\n\n\n## Simulation Engine with Model Variants\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrun_skills_based_simulation <- function(params = PARAMS, model_type = \"theoretical\") {\n  set_simulation_params(params)\n  \n  # Initialize organizations based on model type\n  organizations <- if (model_type == \"structural_control\") {\n    map(1:params$N_ORGS, create_STRUCTURAL_CONTROL_organization)\n  } else {\n    create_skills_based_population()\n  }\n  \n  diffusion_events <- list(); iteration_metrics <- data.frame()\n  \n  # Main simulation loop\n  for (iteration in 1:params$N_ITERATIONS) {\n    if (iteration %% 30 == 0) cat(\"Iteration:\", iteration, \"...\\n\")\n    \n    # 1. UNCERTAINTY GENERATION\n    for (i in 1:params$N_ORGS) {\n      org_uncertainty_rate <- params$uncertainty_rate * organizations[[i]]$sbo_params$uncertainty_tolerance\n      uncertain_skills <- which(rbinom(params$N_SKILLS, 1, org_uncertainty_rate) == 1)\n      organizations[[i]]$uncertainty[uncertain_skills] <- 1\n    }\n    \n    # 2. IMITATION PROCESS\n    iteration_events_list <- list(); cog_adoptions <- 0; phys_adoptions <- 0; cog_attempts <- 0; phys_attempts <- 0\n    \n    for (org_id in 1:params$N_ORGS) {\n      focal_org <- organizations[[org_id]]; uncertain_skills <- which(focal_org$uncertainty == 1)\n      \n      if (length(uncertain_skills) > 0) {\n        org_imitation_rate <- params$imitation_rate * focal_org$sbo_params$imitation_propensity\n        \n        for (skill_id in uncertain_skills) {\n          if (rbinom(1, 1, org_imitation_rate) == 1) {\n            skill_type <- ifelse(skill_id %in% COGNITIVE_SKILLS, \"cognitive\", \"physical\")\n            if (skill_type == \"cognitive\") cog_attempts <- cog_attempts + 1 else phys_attempts <- phys_attempts + 1\n            \n            # Model-specific logic\n            decision_result <- switch(model_type,\n              \"theoretical\" = { ref_orgs <- identify_reference_groups_skills_based(org_id, skill_type, organizations); make_imitation_decision_skills_based(org_id, skill_id, ref_orgs, organizations) },\n              \"strong_null\" = { ref_orgs <- identify_reference_groups_STRONG_NULL(org_id, skill_type, organizations); make_imitation_decision_STRONG_NULL(org_id, skill_id, ref_orgs, organizations) },\n              \"proper_reversed\" = { ref_orgs <- identify_reference_groups_PROPER_REVERSED(org_id, skill_type, organizations); make_imitation_decision_PROPER_REVERSED(org_id, skill_id, ref_orgs, organizations) },\n              \"structural_control\" = { ref_orgs <- identify_reference_groups_STRUCTURAL_CONTROL(org_id, skill_type, organizations); make_imitation_decision_STRUCTURAL_CONTROL(org_id, skill_id, ref_orgs, organizations) }\n            )\n            \n            if (decision_result$adopt == 1) {\n              organizations[[org_id]]$skills[skill_id] <- 1\n              if (skill_type == \"cognitive\") cog_adoptions <- cog_adoptions + 1 else phys_adoptions <- phys_adoptions + 1\n            }\n            \n            # Record event\n            if (!is.null(decision_result$record)) {\n              event_record <- decision_result$record\n              iteration_events_list[[length(iteration_events_list) + 1]] <- data.frame(\n                iteration = iteration, org_id = org_id, org_status = focal_org$status,\n                skill_id = event_record$skill_id, skill_type = event_record$skill_type,\n                adopted = event_record$adopted, status_gap = event_record$status_gap\n              )\n            }\n          }\n        }\n      }\n      organizations[[org_id]]$uncertainty <- rep(0, params$N_SKILLS)\n    }\n    \n    # 3. CALCULATE ITERATION METRICS\n    cog_adoption_rate <- ifelse(cog_attempts > 0, cog_adoptions / cog_attempts, 0)\n    phys_adoption_rate <- ifelse(phys_attempts > 0, phys_adoptions / phys_attempts, 0)\n    \n    iteration_metrics <- rbind(iteration_metrics, data.frame(\n      iteration = iteration, cog_adoption_rate = cog_adoption_rate, phys_adoption_rate = phys_adoption_rate,\n      asymmetry_diff = cog_adoption_rate - phys_adoption_rate, model_type = model_type\n    ))\n    \n    if (length(iteration_events_list) > 0) diffusion_events[[iteration]] <- bind_rows(iteration_events_list)\n  }\n  \n  all_events <- if (length(diffusion_events) > 0) bind_rows(diffusion_events) else data.frame()\n  return(list(diffusion_events = all_events, iteration_metrics = iteration_metrics, final_organizations = organizations, parameters = params))\n}\n\n# Helper function for Gini coefficient\ncalculate_gini <- function(x) {\n  x <- x[!is.na(x)]; n <- length(x)\n  if (n == 0) return(0)\n  x <- sort(x); index <- 1:n\n  return((2 * sum(index * x)) / (n * sum(x)) - (n + 1) / n)\n}\n```\n:::\n\n\n\n## Analysis Functions\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nanalyze_skills_based_patterns <- function(results) {\n  events_df <- results$diffusion_events\n  if (is.null(events_df) || nrow(events_df) == 0) {\n    return(list(channeling_analysis = data.frame(), status_patterns = data.frame(), asymmetry_coefficients = data.frame(), org_patterns = data.frame()))\n  }\n  \n  # Basic channeling analysis - core theoretical validation\n  channeling_analysis <- events_df %>%\n    mutate(status_direction = case_when(status_gap > 0.5 ~ \"Upward\", status_gap < -0.5 ~ \"Downward\", TRUE ~ \"Lateral\")) %>%\n    group_by(skill_type, status_direction) %>%\n    summarise(adoption_rate = mean(adopted, na.rm = TRUE), n_events = n(), .groups = 'drop')\n  \n  # Status quintile patterns - aspirational hunger\n  status_patterns <- events_df %>%\n    mutate(status_quintile = ntile(org_status, 5)) %>%\n    group_by(skill_type, status_quintile) %>%\n    summarise(adoption_rate = mean(adopted, na.rm = TRUE), n_events = n(), .groups = 'drop')\n  \n  # Enhanced asymmetry coefficients - mechanism quantification\n  asymmetry_coef <- events_df %>%\n    mutate(delta_plus = pmax(0, status_gap), delta_minus = pmax(0, -status_gap)) %>%\n    group_by(skill_type) %>%\n    summarise(\n      beta_plus = cor(delta_plus, adopted, use = \"complete.obs\"),\n      beta_minus = -cor(delta_minus, adopted, use = \"complete.obs\"),\n      asymmetry = beta_plus - beta_minus,\n      mean_adoption = mean(adopted, na.rm = TRUE),\n      .groups = 'drop'\n    )\n  \n  return(list(channeling_analysis = channeling_analysis, status_patterns = status_patterns, asymmetry_coefficients = asymmetry_coef))\n}\n```\n:::\n\n\n\n# Comprehensive Simulation Execution and Analysis\n\n## Main Simulation: Skills-Based Theoretical Model\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Execute the skills-based theoretical model\ncat(\"Running Skills-Based Theoretical Model...\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRunning Skills-Based Theoretical Model...\n```\n\n\n:::\n\n```{.r .cell-code}\nmain_results <- run_skills_based_simulation()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nIteration: 30 ...\nIteration: 60 ...\nIteration: 90 ...\nIteration: 120 ...\n```\n\n\n:::\n\n```{.r .cell-code}\nmain_analysis <- analyze_skills_based_patterns(main_results)\n\ncat(\"Simulation completed successfully!\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimulation completed successfully!\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"Events recorded:\", nrow(main_results$diffusion_events), \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nEvents recorded: 15285 \n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"Iterations completed:\", max(main_results$iteration_metrics$iteration), \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nIterations completed: 120 \n```\n\n\n:::\n:::\n\n\n\n## Core Results: Cultural Theorization Validation\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Enhanced results with skills-based organizational grounding\ncat(\"=== SKILLS-BASED ABM RESULTS: THEORIZATION VALIDATION ===\\n\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n=== SKILLS-BASED ABM RESULTS: THEORIZATION VALIDATION ===\n```\n\n\n:::\n\n```{.r .cell-code}\n# Table 1: Core Channeling Patterns - Theoretical Validation\nkable(main_analysis$channeling_analysis,\n      caption = \"**Core Validation: Asymmetric Channeling by Status Direction**\",\n      col.names = c(\"Skill Type\", \"Status Direction\", \"Adoption Rate\", \"N Events\"),\n      digits = 3) %>%\n  kable_styling(bootstrap_options = c(\"striped\", \"hover\"), full_width = FALSE) %>%\n  row_spec(which(main_analysis$channeling_analysis$status_direction == \"Upward\"),\n           background = \"#E8F4FD\") %>%\n  add_header_above(c(\" \" = 1, \" \" = 1, \"Cultural Theorization Effects\" = 2))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-striped table-hover\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n<caption>**Core Validation: Asymmetric Channeling by Status Direction**</caption>\n <thead>\n<tr>\n<th style=\"empty-cells: hide;border-bottom:hidden;\" colspan=\"1\"></th>\n<th style=\"empty-cells: hide;border-bottom:hidden;\" colspan=\"1\"></th>\n<th style=\"border-bottom:hidden;padding-bottom:0; padding-left:3px;padding-right:3px;text-align: center; \" colspan=\"2\"><div style=\"border-bottom: 1px solid #ddd; padding-bottom: 5px; \">Cultural Theorization Effects</div></th>\n</tr>\n  <tr>\n   <th style=\"text-align:left;\"> Skill Type </th>\n   <th style=\"text-align:left;\"> Status Direction </th>\n   <th style=\"text-align:right;\"> Adoption Rate </th>\n   <th style=\"text-align:right;\"> N Events </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> cognitive </td>\n   <td style=\"text-align:left;\"> Downward </td>\n   <td style=\"text-align:right;\"> 0.617 </td>\n   <td style=\"text-align:right;\"> 60 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> cognitive </td>\n   <td style=\"text-align:left;\"> Lateral </td>\n   <td style=\"text-align:right;\"> 0.667 </td>\n   <td style=\"text-align:right;\"> 4776 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;background-color: rgba(232, 244, 253, 255) !important;\"> cognitive </td>\n   <td style=\"text-align:left;background-color: rgba(232, 244, 253, 255) !important;\"> Upward </td>\n   <td style=\"text-align:right;background-color: rgba(232, 244, 253, 255) !important;\"> 0.683 </td>\n   <td style=\"text-align:right;background-color: rgba(232, 244, 253, 255) !important;\"> 2845 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> physical </td>\n   <td style=\"text-align:left;\"> Downward </td>\n   <td style=\"text-align:right;\"> 0.326 </td>\n   <td style=\"text-align:right;\"> 1292 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> physical </td>\n   <td style=\"text-align:left;\"> Lateral </td>\n   <td style=\"text-align:right;\"> 0.572 </td>\n   <td style=\"text-align:right;\"> 4994 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;background-color: rgba(232, 244, 253, 255) !important;\"> physical </td>\n   <td style=\"text-align:left;background-color: rgba(232, 244, 253, 255) !important;\"> Upward </td>\n   <td style=\"text-align:right;background-color: rgba(232, 244, 253, 255) !important;\"> 0.348 </td>\n   <td style=\"text-align:right;background-color: rgba(232, 244, 253, 255) !important;\"> 1318 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n\n```{.r .cell-code}\n# Table 2: Asymmetry Coefficients - Mechanism Quantification\nkable(main_analysis$asymmetry_coefficients,\n      caption = \"**Mechanism Validation: Cultural Theorization Effects**\",\n      col.names = c(\"Skill Type\", \"β⁺ (Upward)\", \"β⁻ (Downward)\", \"Asymmetry\", \"Mean Adoption\"),\n      digits = 4) %>%\n  kable_styling(bootstrap_options = c(\"striped\", \"hover\"), full_width = FALSE) %>%\n  column_spec(4, bold = TRUE, background = \"#FFF2E8\") %>%\n  add_header_above(c(\" \" = 1, \" \" = 2, \"Theorization Mechanism\" = 2))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-striped table-hover\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n<caption>**Mechanism Validation: Cultural Theorization Effects**</caption>\n <thead>\n<tr>\n<th style=\"empty-cells: hide;border-bottom:hidden;\" colspan=\"1\"></th>\n<th style=\"empty-cells: hide;border-bottom:hidden;\" colspan=\"2\"></th>\n<th style=\"border-bottom:hidden;padding-bottom:0; padding-left:3px;padding-right:3px;text-align: center; \" colspan=\"2\"><div style=\"border-bottom: 1px solid #ddd; padding-bottom: 5px; \">Theorization Mechanism</div></th>\n</tr>\n  <tr>\n   <th style=\"text-align:left;\"> Skill Type </th>\n   <th style=\"text-align:right;\"> β⁺ (Upward) </th>\n   <th style=\"text-align:right;\"> β⁻ (Downward) </th>\n   <th style=\"text-align:right;\"> Asymmetry </th>\n   <th style=\"text-align:right;\"> Mean Adoption </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> cognitive </td>\n   <td style=\"text-align:right;\"> 0.064 </td>\n   <td style=\"text-align:right;\"> 0.0107 </td>\n   <td style=\"text-align:right;font-weight: bold;background-color: rgba(255, 242, 232, 255) !important;\"> 0.0533 </td>\n   <td style=\"text-align:right;\"> 0.6723 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> physical </td>\n   <td style=\"text-align:right;\"> -0.097 </td>\n   <td style=\"text-align:right;\"> 0.1231 </td>\n   <td style=\"text-align:right;font-weight: bold;background-color: rgba(255, 242, 232, 255) !important;\"> -0.2201 </td>\n   <td style=\"text-align:right;\"> 0.4917 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n## Visualizations: Core Theoretical Validation\n\n### Plot 1: Core Channeling Patterns - Theorization Validation\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np1_skills_based <- ggplot(main_analysis$channeling_analysis,\n                         aes(x = status_direction, y = adoption_rate, fill = skill_type)) +\n  geom_col(position = \"dodge\", alpha = 0.9, width = 0.7, color = \"white\", linewidth = 1) +\n  geom_text(aes(label = scales::percent(adoption_rate, accuracy = 0.1)),\n            position = position_dodge(0.7), vjust = -0.7, fontface = \"bold\", size = 6, color = \"grey20\") +\n  scale_fill_manual(values = skill_colors, name = \"Skill Type:\") +\n  scale_y_continuous(labels = scales::percent_format(), expand = expansion(mult = c(0, 0.15))) +\n  labs(title = \"Cultural Theorization: Asymmetric Trajectory Channeling\",\n       subtitle = \"Cognitive skills theorized as portable assets; physical skills as context-dependent\",\n       x = \"Direction of Imitation\", y = \"Adoption Rate\",\n       caption = \"Based on Strang's (1993) cultural theorization theory\")\n\nprint(p1_skills_based)\n```\n\n::: {.cell-output-display}\n![](01_abm_skill_diffusion_files/figure-html/plot1-skills-based-channeling-1.png){width=4200}\n:::\n:::\n\n\n\n### Plot 2: Aspirational Hunger by Status\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np2_hunger <- ggplot(main_analysis$status_patterns,\n                   aes(x = status_quintile, y = adoption_rate, color = skill_type)) +\n  geom_line(linewidth = 3, alpha = 0.9) +\n  geom_point(size = 5, alpha = 0.95, stroke = 2, fill = \"white\", shape = 21) +\n  annotate(\"text\", x = 1.5, y = 0.65, label = \"Aspirational\\nHunger\", \n           color = skill_colors[[\"cognitive\"]], fontface = \"bold\", size = 6) +\n  scale_color_manual(values = skill_colors, name = \"Skill Type:\") +\n  scale_x_continuous(breaks = 1:5, labels = paste(\"Q\", 1:5)) +\n  scale_y_continuous(labels = scales::percent_format()) +\n  labs(title = \"Aspirational Hunger: Status-Seeking Through Cognitive Skills\",\n       subtitle = \"Low-status organizations actively pursue cognitive skills as mobility strategies\",\n       x = \"Organization Status Quintile (Q1=Lowest, Q5=Highest)\",\n       y = \"Skill Adoption Rate\",\n       caption = \"Confirms active theorization-based seeking rather than passive diffusion\")\n\nprint(p2_hunger)\n```\n\n::: {.cell-output-display}\n![](01_abm_skill_diffusion_files/figure-html/plot2-skills-based-hunger-1.png){width=4200}\n:::\n:::\n\n\n\n### Plot 3: Asymmetry Coefficients - Mechanism Quantification\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np3_asymmetry <- ggplot(main_analysis$asymmetry_coefficients,\n                      aes(x = skill_type, y = asymmetry, fill = skill_type)) +\n  geom_col(alpha = 0.9, width = 0.6, color = \"white\", linewidth = 1) +\n  geom_hline(yintercept = 0, linetype = \"dashed\", alpha = 0.8, linewidth = 1.5, color = \"grey40\") +\n  geom_text(aes(label = sprintf(\"%.3f\", asymmetry)), vjust = -0.7, fontface = \"bold\", size = 6, color = \"grey20\") +\n  scale_fill_manual(values = skill_colors, guide = \"none\") +\n  labs(title = \"Cultural Theorization Effects: Quantifying Directional Bias\",\n       subtitle = \"Asymmetry coefficients demonstrate theorization-based channeling mechanisms\",\n       x = \"Skill Type\", y = \"Asymmetry Coefficient (β⁺ - β⁻)\",\n       caption = \"Positive = portable asset effect; Negative = context-dependent effect\")\n\nprint(p3_asymmetry)\n```\n\n::: {.cell-output-display}\n![](01_abm_skill_diffusion_files/figure-html/plot3-skills-based-asymmetry-1.png){width=4200}\n:::\n:::\n\n\n\n### Plot 4: Temporal Dynamics - System Evolution\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np4_temporal <- ggplot(main_results$iteration_metrics, aes(x = iteration, y = asymmetry_diff)) +\n  geom_line(linewidth = 2, color = \"#6c3483\", alpha = 0.8) +\n  geom_smooth(method = \"loess\", se = TRUE, color = \"#F39C12\", linewidth = 2, alpha = 0.3) +\n  geom_hline(yintercept = 0, linetype = \"dashed\", alpha = 0.8, linewidth = 1.5, color = \"grey40\") +\n  labs(title = \"Evolution of Diffusion Asymmetry Over Time\",\n       subtitle = \"The difference between cognitive and physical adoption rates emerges and stabilizes\",\n       x = \"Iteration\", y = \"Asymmetry (Cognitive Rate - Physical Rate)\",\n       caption = \"Shows convergence to stable asymmetric equilibrium\")\n\nprint(p4_temporal)\n```\n\n::: {.cell-output-display}\n![](01_abm_skill_diffusion_files/figure-html/plot4-temporal-dynamics-1.png){width=4200}\n:::\n:::\n\n\n\n# Comprehensive Sensitivity Analysis\n\n## Sensitivity Analysis: Parameter Robustness Testing\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncat(\"Running Comprehensive Sensitivity Analysis...\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRunning Comprehensive Sensitivity Analysis...\n```\n\n\n:::\n\n```{.r .cell-code}\n# ESSENTIAL: Test robustness across parameter combinations\nrun_sensitivity_analysis <- function(n_combinations = 30) {\n  sensitivity_grid <- data.frame(\n    uncertainty_rate = runif(n_combinations, 0.05, 0.3),\n    imitation_rate = runif(n_combinations, 0.4, 0.8),\n    cultural_strength = runif(n_combinations, 0.5, 1.0),\n    status_bonus_cognitive = runif(n_combinations, 0.1, 0.4),\n    proximity_penalty_physical = runif(n_combinations, 0.1, 0.5)\n  )\n  \n  sensitivity_results <- data.frame()\n  \n  for (i in 1:nrow(sensitivity_grid)) {\n    if (i %% 5 == 0) cat(\"Sensitivity run\", i, \"of\", nrow(sensitivity_grid), \"\\n\")\n    \n    # Set parameters for this run\n    params <- DEFAULT_PARAMS\n    params$uncertainty_rate <- sensitivity_grid$uncertainty_rate[i]\n    params$imitation_rate <- sensitivity_grid$imitation_rate[i]\n    params$cultural_strength <- sensitivity_grid$cultural_strength[i]\n    params$status_bonus_cognitive <- sensitivity_grid$status_bonus_cognitive[i]\n    params$proximity_penalty_physical <- sensitivity_grid$proximity_penalty_physical[i]\n    \n    # Run simulation\n    set.seed(42 + i)  # Reproducible but different for each run\n    result <- run_skills_based_simulation(params)\n    \n    # Analyze results safely\n    if (!is.null(result$diffusion_events) && nrow(result$diffusion_events) > 0) {\n      analysis <- analyze_skills_based_patterns(result)\n      \n      # Extract asymmetry metrics safely\n      cog_asym <- NA; phys_asym <- NA\n      if (nrow(analysis$asymmetry_coefficients) > 0) {\n        cog_idx <- which(analysis$asymmetry_coefficients$skill_type == \"cognitive\")\n        phys_idx <- which(analysis$asymmetry_coefficients$skill_type == \"physical\")\n        \n        if (length(cog_idx) > 0) cog_asym <- analysis$asymmetry_coefficients$asymmetry[cog_idx]\n        if (length(phys_idx) > 0) phys_asym <- analysis$asymmetry_coefficients$asymmetry[phys_idx]\n      }\n      \n      # Store results\n      sensitivity_results <- rbind(sensitivity_results, data.frame(\n        run_id = i,\n        uncertainty_rate = params$uncertainty_rate,\n        imitation_rate = params$imitation_rate,\n        cultural_strength = params$cultural_strength,\n        status_bonus_cognitive = params$status_bonus_cognitive,\n        proximity_penalty_physical = params$proximity_penalty_physical,\n        cognitive_asymmetry = cog_asym,\n        physical_asymmetry = phys_asym,\n        theorization_difference = ifelse(!is.na(cog_asym) & !is.na(phys_asym), cog_asym - phys_asym, NA)\n      ))\n    }\n  }\n  \n  return(sensitivity_results)\n}\n\n# Execute sensitivity analysis\nsensitivity_results <- run_sensitivity_analysis()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nIteration: 30 ...\nIteration: 60 ...\nIteration: 90 ...\nIteration: 120 ...\nIteration: 30 ...\nIteration: 60 ...\nIteration: 90 ...\nIteration: 120 ...\nIteration: 30 ...\nIteration: 60 ...\nIteration: 90 ...\nIteration: 120 ...\nIteration: 30 ...\nIteration: 60 ...\nIteration: 90 ...\nIteration: 120 ...\nSensitivity run 5 of 30 \nIteration: 30 ...\nIteration: 60 ...\nIteration: 90 ...\nIteration: 120 ...\nIteration: 30 ...\nIteration: 60 ...\nIteration: 90 ...\nIteration: 120 ...\nIteration: 30 ...\nIteration: 60 ...\nIteration: 90 ...\nIteration: 120 ...\nIteration: 30 ...\nIteration: 60 ...\nIteration: 90 ...\nIteration: 120 ...\nIteration: 30 ...\nIteration: 60 ...\nIteration: 90 ...\nIteration: 120 ...\nSensitivity run 10 of 30 \nIteration: 30 ...\nIteration: 60 ...\nIteration: 90 ...\nIteration: 120 ...\nIteration: 30 ...\nIteration: 60 ...\nIteration: 90 ...\nIteration: 120 ...\nIteration: 30 ...\nIteration: 60 ...\nIteration: 90 ...\nIteration: 120 ...\nIteration: 30 ...\nIteration: 60 ...\nIteration: 90 ...\nIteration: 120 ...\nIteration: 30 ...\nIteration: 60 ...\nIteration: 90 ...\nIteration: 120 ...\nSensitivity run 15 of 30 \nIteration: 30 ...\nIteration: 60 ...\nIteration: 90 ...\nIteration: 120 ...\nIteration: 30 ...\nIteration: 60 ...\nIteration: 90 ...\nIteration: 120 ...\nIteration: 30 ...\nIteration: 60 ...\nIteration: 90 ...\nIteration: 120 ...\nIteration: 30 ...\nIteration: 60 ...\nIteration: 90 ...\nIteration: 120 ...\nIteration: 30 ...\nIteration: 60 ...\nIteration: 90 ...\nIteration: 120 ...\nSensitivity run 20 of 30 \nIteration: 30 ...\nIteration: 60 ...\nIteration: 90 ...\nIteration: 120 ...\nIteration: 30 ...\nIteration: 60 ...\nIteration: 90 ...\nIteration: 120 ...\nIteration: 30 ...\nIteration: 60 ...\nIteration: 90 ...\nIteration: 120 ...\nIteration: 30 ...\nIteration: 60 ...\nIteration: 90 ...\nIteration: 120 ...\nIteration: 30 ...\nIteration: 60 ...\nIteration: 90 ...\nIteration: 120 ...\nSensitivity run 25 of 30 \nIteration: 30 ...\nIteration: 60 ...\nIteration: 90 ...\nIteration: 120 ...\nIteration: 30 ...\nIteration: 60 ...\nIteration: 90 ...\nIteration: 120 ...\nIteration: 30 ...\nIteration: 60 ...\nIteration: 90 ...\nIteration: 120 ...\nIteration: 30 ...\nIteration: 60 ...\nIteration: 90 ...\nIteration: 120 ...\nIteration: 30 ...\nIteration: 60 ...\nIteration: 90 ...\nIteration: 120 ...\nSensitivity run 30 of 30 \nIteration: 30 ...\nIteration: 60 ...\nIteration: 90 ...\nIteration: 120 ...\n```\n\n\n:::\n\n```{.r .cell-code}\n# Display summary\nif (nrow(sensitivity_results) > 0) {\n  cat(\"=== SENSITIVITY ANALYSIS RESULTS ===\\n\")\n  cat(\"Successful runs:\", sum(!is.na(sensitivity_results$theorization_difference)), \"\\n\")\n  \n  valid_results <- sensitivity_results[!is.na(sensitivity_results$theorization_difference), ]\n  if (nrow(valid_results) > 0) {\n    cat(\"Theorization difference range:\", round(range(valid_results$theorization_difference), 3), \"\\n\")\n    cat(\"Mean theorization difference:\", round(mean(valid_results$theorization_difference), 3), \"\\n\")\n    cat(\"Consistency rate (positive differences):\", round(mean(valid_results$theorization_difference > 0), 3), \"\\n\")\n    \n    # Summary table\n    summary_table <- valid_results %>%\n      summarise(\n        mean_cognitive = mean(cognitive_asymmetry, na.rm = TRUE),\n        mean_physical = mean(physical_asymmetry, na.rm = TRUE),\n        mean_theorization = mean(theorization_difference, na.rm = TRUE),\n        consistency_rate = mean(theorization_difference > 0, na.rm = TRUE),\n        n_runs = n()\n      )\n    \n    kable(summary_table,\n          caption = \"**Sensitivity Analysis: Cultural Theorization Robustness**\",\n          col.names = c(\"Mean Cognitive\", \"Mean Physical\", \"Mean Theorization\", \"Consistency Rate\", \"N Runs\"),\n          digits = 4) %>%\n      kable_styling(bootstrap_options = c(\"striped\", \"hover\"), full_width = FALSE)\n  }\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n=== SENSITIVITY ANALYSIS RESULTS ===\nSuccessful runs: 30 \nTheorization difference range: 0.107 0.435 \nMean theorization difference: 0.211 \nConsistency rate (positive differences): 1 \n```\n\n\n:::\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-striped table-hover\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n<caption>**Sensitivity Analysis: Cultural Theorization Robustness**</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:right;\"> Mean Cognitive </th>\n   <th style=\"text-align:right;\"> Mean Physical </th>\n   <th style=\"text-align:right;\"> Mean Theorization </th>\n   <th style=\"text-align:right;\"> Consistency Rate </th>\n   <th style=\"text-align:right;\"> N Runs </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> 0.0743 </td>\n   <td style=\"text-align:right;\"> -0.1364 </td>\n   <td style=\"text-align:right;\"> 0.2107 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 30 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n### Sensitivity Analysis Visualization\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nif (nrow(sensitivity_results) > 0 && sum(!is.na(sensitivity_results$theorization_difference)) > 5) {\n  \n  valid_sensitivity <- sensitivity_results[!is.na(sensitivity_results$theorization_difference), ]\n  \n  # Parameter correlation analysis\n  cor_data <- valid_sensitivity %>%\n    select(uncertainty_rate, imitation_rate, cultural_strength, \n           status_bonus_cognitive, proximity_penalty_physical, theorization_difference) %>%\n    cor(use = \"complete.obs\")\n  \n  # Extract correlations with outcome\n  cor_long <- data.frame(\n    parameter = c(\"uncertainty_rate\", \"imitation_rate\", \"cultural_strength\", \n                 \"status_bonus_cognitive\", \"proximity_penalty_physical\"),\n    correlation = cor_data[, \"theorization_difference\"][1:5]\n  )\n  \n  # Parameter sensitivity plot\n  p_sensitivity <- ggplot(cor_long, aes(x = reorder(parameter, correlation), y = correlation)) +\n    geom_col(aes(fill = correlation > 0), alpha = 0.9, width = 0.7, color = \"white\", linewidth = 1) +\n    geom_hline(yintercept = 0, linetype = \"dashed\", linewidth = 1.5, color = \"grey40\") +\n    geom_text(aes(label = sprintf(\"%.3f\", correlation)), hjust = ifelse(cor_long$correlation > 0, -0.2, 1.2), \n              fontface = \"bold\", size = 5, color = \"grey20\") +\n    scale_fill_manual(values = c(\"TRUE\" = \"#27AE60\", \"FALSE\" = \"#E74C3C\"), guide = \"none\") +\n    coord_flip() +\n    labs(title = \"Cultural Theorization: Parameter Sensitivity Analysis\",\n         subtitle = \"Key mechanism parameters drive theorization-based asymmetric channeling\",\n         x = \"Parameters\", y = \"Correlation with Theorization Effects\",\n         caption = paste(\"Based on\", nrow(valid_sensitivity), \"successful parameter combinations\"))\n  \n  print(p_sensitivity)\n}\n```\n\n::: {.cell-output-display}\n![](01_abm_skill_diffusion_files/figure-html/sensitivity-visualization-1.png){width=4200}\n:::\n:::\n\n\n\n# Comprehensive Model Comparison: Mechanism Necessity\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncat(\"Running Comprehensive Model Comparison...\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRunning Comprehensive Model Comparison...\n```\n\n\n:::\n\n```{.r .cell-code}\n# Model comparison with multiple seeds for robustness\nrun_model_comparison <- function(n_seeds = 3) {\n  model_types <- c(\"theoretical\", \"strong_null\", \"proper_reversed\", \"structural_control\")\n  comparison_results <- list()\n  \n  for (model_type in model_types) {\n    cat(\"Running\", model_type, \"model...\\n\")\n    model_results <- list()\n    \n    for (seed in 1:n_seeds) {\n      set.seed(seed + 400)\n      result <- run_skills_based_simulation(model_type = model_type)\n      model_results[[seed]] <- result\n    }\n    comparison_results[[model_type]] <- model_results\n  }\n  return(comparison_results)\n}\n\n# Execute model comparison\ncomparison_results <- run_model_comparison()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRunning theoretical model...\nIteration: 30 ...\nIteration: 60 ...\nIteration: 90 ...\nIteration: 120 ...\nIteration: 30 ...\nIteration: 60 ...\nIteration: 90 ...\nIteration: 120 ...\nIteration: 30 ...\nIteration: 60 ...\nIteration: 90 ...\nIteration: 120 ...\nRunning strong_null model...\nIteration: 30 ...\nIteration: 60 ...\nIteration: 90 ...\nIteration: 120 ...\nIteration: 30 ...\nIteration: 60 ...\nIteration: 90 ...\nIteration: 120 ...\nIteration: 30 ...\nIteration: 60 ...\nIteration: 90 ...\nIteration: 120 ...\nRunning proper_reversed model...\nIteration: 30 ...\nIteration: 60 ...\nIteration: 90 ...\nIteration: 120 ...\nIteration: 30 ...\nIteration: 60 ...\nIteration: 90 ...\nIteration: 120 ...\nIteration: 30 ...\nIteration: 60 ...\nIteration: 90 ...\nIteration: 120 ...\nRunning structural_control model...\nIteration: 30 ...\nIteration: 60 ...\nIteration: 90 ...\nIteration: 120 ...\nIteration: 30 ...\nIteration: 60 ...\nIteration: 90 ...\nIteration: 120 ...\nIteration: 30 ...\nIteration: 60 ...\nIteration: 90 ...\nIteration: 120 ...\n```\n\n\n:::\n\n```{.r .cell-code}\n# Extract comparison metrics\nextract_comparison_metrics <- function(comparison_results) {\n  model_asymmetries <- data.frame()\n  \n  for (model_type in names(comparison_results)) {\n    for (seed in 1:length(comparison_results[[model_type]])) {\n      result <- comparison_results[[model_type]][[seed]]\n      if (!is.null(result$diffusion_events) && nrow(result$diffusion_events) > 0) {\n        analysis <- analyze_skills_based_patterns(result)\n        if (nrow(analysis$asymmetry_coefficients) > 0) {\n          asymmetries <- analysis$asymmetry_coefficients %>%\n            mutate(model_type = model_type, seed = seed)\n          model_asymmetries <- rbind(model_asymmetries, asymmetries)\n        }\n      }\n    }\n  }\n  return(model_asymmetries)\n}\n\ncomparison_metrics <- extract_comparison_metrics(comparison_results)\n\n# Display comparison results\nif (nrow(comparison_metrics) > 0) {\n  model_summary <- comparison_metrics %>%\n    group_by(model_type, skill_type) %>%\n    summarise(\n      mean_asymmetry = mean(asymmetry, na.rm = TRUE),\n      sd_asymmetry = sd(asymmetry, na.rm = TRUE),\n      n_runs = n(),\n      .groups = 'drop'\n    )\n  \n  kable(model_summary,\n        caption = \"**Model Comparison: Cultural Theorization Necessity Validation**\",\n        col.names = c(\"Model Type\", \"Skill Type\", \"Mean Asymmetry\", \"SD Asymmetry\", \"N Runs\"),\n        digits = 4) %>%\n    kable_styling(bootstrap_options = c(\"striped\", \"hover\"), full_width = FALSE) %>%\n    row_spec(which(model_summary$model_type == \"theoretical\"),\n             background = \"#E8F6F3\")\n}\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-striped table-hover\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n<caption>**Model Comparison: Cultural Theorization Necessity Validation**</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Model Type </th>\n   <th style=\"text-align:left;\"> Skill Type </th>\n   <th style=\"text-align:right;\"> Mean Asymmetry </th>\n   <th style=\"text-align:right;\"> SD Asymmetry </th>\n   <th style=\"text-align:right;\"> N Runs </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> proper_reversed </td>\n   <td style=\"text-align:left;\"> cognitive </td>\n   <td style=\"text-align:right;\"> -0.1050 </td>\n   <td style=\"text-align:right;\"> 0.0295 </td>\n   <td style=\"text-align:right;\"> 3 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> proper_reversed </td>\n   <td style=\"text-align:left;\"> physical </td>\n   <td style=\"text-align:right;\"> 0.0979 </td>\n   <td style=\"text-align:right;\"> 0.0386 </td>\n   <td style=\"text-align:right;\"> 3 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> strong_null </td>\n   <td style=\"text-align:left;\"> cognitive </td>\n   <td style=\"text-align:right;\"> 0.0084 </td>\n   <td style=\"text-align:right;\"> 0.0144 </td>\n   <td style=\"text-align:right;\"> 3 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> strong_null </td>\n   <td style=\"text-align:left;\"> physical </td>\n   <td style=\"text-align:right;\"> 0.0052 </td>\n   <td style=\"text-align:right;\"> 0.0048 </td>\n   <td style=\"text-align:right;\"> 3 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> structural_control </td>\n   <td style=\"text-align:left;\"> cognitive </td>\n   <td style=\"text-align:right;\"> 0.0374 </td>\n   <td style=\"text-align:right;\"> 0.0197 </td>\n   <td style=\"text-align:right;\"> 3 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> structural_control </td>\n   <td style=\"text-align:left;\"> physical </td>\n   <td style=\"text-align:right;\"> -0.0921 </td>\n   <td style=\"text-align:right;\"> 0.0104 </td>\n   <td style=\"text-align:right;\"> 3 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;background-color: rgba(232, 246, 243, 255) !important;\"> theoretical </td>\n   <td style=\"text-align:left;background-color: rgba(232, 246, 243, 255) !important;\"> cognitive </td>\n   <td style=\"text-align:right;background-color: rgba(232, 246, 243, 255) !important;\"> 0.0987 </td>\n   <td style=\"text-align:right;background-color: rgba(232, 246, 243, 255) !important;\"> 0.0400 </td>\n   <td style=\"text-align:right;background-color: rgba(232, 246, 243, 255) !important;\"> 3 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;background-color: rgba(232, 246, 243, 255) !important;\"> theoretical </td>\n   <td style=\"text-align:left;background-color: rgba(232, 246, 243, 255) !important;\"> physical </td>\n   <td style=\"text-align:right;background-color: rgba(232, 246, 243, 255) !important;\"> -0.1069 </td>\n   <td style=\"text-align:right;background-color: rgba(232, 246, 243, 255) !important;\"> 0.0254 </td>\n   <td style=\"text-align:right;background-color: rgba(232, 246, 243, 255) !important;\"> 3 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n### Model Comparison Visualization\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nif (nrow(comparison_metrics) > 0) {\n  \n  # Create comparison summary for visualization\n  viz_summary <- comparison_metrics %>%\n    group_by(model_type, skill_type) %>%\n    summarise(\n      mean_asymmetry = mean(asymmetry, na.rm = TRUE),\n      se_asymmetry = sd(asymmetry, na.rm = TRUE) / sqrt(n()),\n      .groups = 'drop'\n    )\n  \n  # Main comparison plot with enhanced annotations\n  p_comparison <- ggplot(viz_summary, \n                        aes(x = skill_type, y = mean_asymmetry, fill = model_type)) +\n    geom_col(position = position_dodge(0.8), alpha = 0.9, width = 0.75,\n             color = \"white\", linewidth = 1) +\n    geom_errorbar(aes(ymin = mean_asymmetry - se_asymmetry, \n                     ymax = mean_asymmetry + se_asymmetry),\n                 position = position_dodge(0.8), width = 0.25, linewidth = 1) +\n    geom_hline(yintercept = 0, linetype = \"dashed\", alpha = 0.8, linewidth = 1.5, color = \"grey40\") +\n    geom_text(aes(label = sprintf(\"%.3f\", mean_asymmetry)), \n              position = position_dodge(0.8), vjust = -1.5, fontface = \"bold\", size = 4.5, color = \"grey20\") +\n    \n    # Enhanced annotations\n    annotate(\"text\", x = 1, y = 0.12, label = \"Theoretical:\\nAspirational Bias\", \n             color = model_colors[[\"theoretical\"]], fontface = \"bold\", size = 5, hjust = 0.5) +\n    annotate(\"text\", x = 1, y = 0.06, label = \"Reversed:\\nCollapse\", \n             color = model_colors[[\"proper_reversed\"]], fontface = \"bold\", size = 5, hjust = 0.5) +\n    \n    scale_fill_manual(values = model_colors, name = \"Model Type:\",\n                     labels = c(\"theoretical\" = \"Cultural Theorization\", \n                               \"strong_null\" = \"Strong Null\",\n                               \"proper_reversed\" = \"Reversed Logic\",\n                               \"structural_control\" = \"Structural Control\")) +\n    scale_y_continuous(labels = scales::number_format(accuracy = 0.001)) +\n    labs(title = \"Model Comparison: Cultural Theorization Necessity Validation\",\n         subtitle = \"Cognitive asymmetry collapses when theorization logic is altered, proving mechanism necessity\",\n         x = \"Skill Type\", y = \"Mean Asymmetry Coefficient\",\n         caption = \"Error bars show standard error. Cultural theorization is necessary for asymmetric channeling\")\n  \n  print(p_comparison)\n}\n```\n\n::: {.cell-output-display}\n![](01_abm_skill_diffusion_files/figure-html/model-comparison-viz-1.png){width=4200}\n:::\n:::\n\n\n\n# Robustness Analysis Across Multiple Seeds\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncat(\"Running Robustness Analysis with Multiple Seeds...\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRunning Robustness Analysis with Multiple Seeds...\n```\n\n\n:::\n\n```{.r .cell-code}\n# Run multiple seeds for main theoretical model\nrun_robustness_analysis <- function(n_seeds = 8) {\n  robustness_results <- list()\n  \n  for (seed in 1:n_seeds) {\n    cat(\"Running robustness seed\", seed, \"...\\n\")\n    set.seed(seed + 100)\n    result <- run_skills_based_simulation()\n    robustness_results[[seed]] <- result\n  }\n  \n  return(robustness_results)\n}\n\n# Execute robustness analysis\nrobustness_results <- run_robustness_analysis()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRunning robustness seed 1 ...\nIteration: 30 ...\nIteration: 60 ...\nIteration: 90 ...\nIteration: 120 ...\nRunning robustness seed 2 ...\nIteration: 30 ...\nIteration: 60 ...\nIteration: 90 ...\nIteration: 120 ...\nRunning robustness seed 3 ...\nIteration: 30 ...\nIteration: 60 ...\nIteration: 90 ...\nIteration: 120 ...\nRunning robustness seed 4 ...\nIteration: 30 ...\nIteration: 60 ...\nIteration: 90 ...\nIteration: 120 ...\nRunning robustness seed 5 ...\nIteration: 30 ...\nIteration: 60 ...\nIteration: 90 ...\nIteration: 120 ...\nRunning robustness seed 6 ...\nIteration: 30 ...\nIteration: 60 ...\nIteration: 90 ...\nIteration: 120 ...\nRunning robustness seed 7 ...\nIteration: 30 ...\nIteration: 60 ...\nIteration: 90 ...\nIteration: 120 ...\nRunning robustness seed 8 ...\nIteration: 30 ...\nIteration: 60 ...\nIteration: 90 ...\nIteration: 120 ...\n```\n\n\n:::\n\n```{.r .cell-code}\n# Extract robustness metrics\nextract_robustness_metrics <- function(robustness_results) {\n  all_asymmetry <- data.frame()\n  \n  for (seed in 1:length(robustness_results)) {\n    result <- robustness_results[[seed]]\n    if (!is.null(result$diffusion_events) && nrow(result$diffusion_events) > 0) {\n      analysis <- analyze_skills_based_patterns(result)\n      if (nrow(analysis$asymmetry_coefficients) > 0) {\n        asym_coef <- analysis$asymmetry_coefficients %>% mutate(seed = seed)\n        all_asymmetry <- rbind(all_asymmetry, asym_coef)\n      }\n    }\n  }\n  return(all_asymmetry)\n}\n\nrobustness_asymmetry <- extract_robustness_metrics(robustness_results)\n\n# Display robustness results\nif (nrow(robustness_asymmetry) > 0) {\n  asymmetry_summary <- robustness_asymmetry %>%\n    group_by(skill_type) %>%\n    summarise(\n      mean_asymmetry = mean(asymmetry),\n      sd_asymmetry = sd(asymmetry),\n      consistency_check = sum(sign(asymmetry) == sign(mean(asymmetry))),\n      total_runs = n(),\n      .groups = 'drop'\n    ) %>%\n    mutate(consistency_rate = consistency_check / total_runs)\n  \n  asymmetry_by_seed <- robustness_asymmetry %>%\n    select(seed, skill_type, asymmetry) %>%\n    pivot_wider(names_from = skill_type, values_from = asymmetry) %>%\n    mutate(\n      cognitive = round(cognitive, 4),\n      physical = round(physical, 4),\n      theory_confirmed = cognitive > physical\n    )\n  \n  # Summary table\n  kable(asymmetry_summary %>%\n          select(skill_type, mean_asymmetry, sd_asymmetry, consistency_rate),\n        caption = \"**Robustness Analysis: Consistency Across Random Seeds**\",\n        col.names = c(\"Skill Type\", \"Mean Asymmetry\", \"Std. Dev.\", \"Consistency Rate\"),\n        digits = 4) %>%\n    kable_styling(bootstrap_options = c(\"striped\", \"hover\"), full_width = FALSE)\n  \n  # Individual seeds table\n  kable(asymmetry_by_seed,\n        caption = \"**Asymmetry Coefficients by Individual Random Seed**\",\n        col.names = c(\"Seed\", \"Cognitive\", \"Physical\", \"Theory Confirmed\")) %>%\n    kable_styling(bootstrap_options = c(\"striped\", \"hover\"), full_width = FALSE) %>%\n    column_spec(4, bold = TRUE,\n                background = ifelse(asymmetry_by_seed$theory_confirmed, \"#D4EDDA\", \"#F8D7DA\"))\n}\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-striped table-hover\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n<caption>**Asymmetry Coefficients by Individual Random Seed**</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:right;\"> Seed </th>\n   <th style=\"text-align:right;\"> Cognitive </th>\n   <th style=\"text-align:right;\"> Physical </th>\n   <th style=\"text-align:left;\"> Theory Confirmed </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 0.1447 </td>\n   <td style=\"text-align:right;\"> -0.0735 </td>\n   <td style=\"text-align:left;font-weight: bold;background-color: rgba(212, 237, 218, 255) !important;\"> TRUE </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 0.0963 </td>\n   <td style=\"text-align:right;\"> -0.1160 </td>\n   <td style=\"text-align:left;font-weight: bold;background-color: rgba(212, 237, 218, 255) !important;\"> TRUE </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 0.0529 </td>\n   <td style=\"text-align:right;\"> -0.1134 </td>\n   <td style=\"text-align:left;font-weight: bold;background-color: rgba(212, 237, 218, 255) !important;\"> TRUE </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:right;\"> 0.1531 </td>\n   <td style=\"text-align:right;\"> -0.1097 </td>\n   <td style=\"text-align:left;font-weight: bold;background-color: rgba(212, 237, 218, 255) !important;\"> TRUE </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 5 </td>\n   <td style=\"text-align:right;\"> 0.0760 </td>\n   <td style=\"text-align:right;\"> -0.1135 </td>\n   <td style=\"text-align:left;font-weight: bold;background-color: rgba(212, 237, 218, 255) !important;\"> TRUE </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 6 </td>\n   <td style=\"text-align:right;\"> 0.1251 </td>\n   <td style=\"text-align:right;\"> -0.1199 </td>\n   <td style=\"text-align:left;font-weight: bold;background-color: rgba(212, 237, 218, 255) !important;\"> TRUE </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 7 </td>\n   <td style=\"text-align:right;\"> 0.0570 </td>\n   <td style=\"text-align:right;\"> -0.0882 </td>\n   <td style=\"text-align:left;font-weight: bold;background-color: rgba(212, 237, 218, 255) !important;\"> TRUE </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 8 </td>\n   <td style=\"text-align:right;\"> 0.1045 </td>\n   <td style=\"text-align:right;\"> -0.1091 </td>\n   <td style=\"text-align:left;font-weight: bold;background-color: rgba(212, 237, 218, 255) !important;\"> TRUE </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n### Robustness Visualization\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nif (nrow(robustness_asymmetry) > 0) {\n  p_robustness <- ggplot(robustness_asymmetry,\n                         aes(x = factor(seed), y = asymmetry, fill = skill_type)) +\n    geom_col(position = \"dodge\", alpha = 0.9, width = 0.7, color = \"white\", linewidth = 1) +\n    geom_hline(yintercept = 0, linetype = \"dashed\", alpha = 0.8, linewidth = 1.5, color = \"grey40\") +\n    scale_fill_manual(values = skill_colors, name = \"Skill Type:\") +\n    labs(title = \"Robustness of Asymmetry Coefficients Across Multiple Seeds\",\n         subtitle = \"The asymmetric channeling pattern is stable and not an artifact of initialization\",\n         x = \"Random Seed\", y = \"Asymmetry Coefficient (β⁺ - β⁻)\",\n         caption = \"Confirms generative sufficiency across stochastic realizations\")\n  \n  print(p_robustness)\n}\n```\n\n::: {.cell-output-display}\n![](01_abm_skill_diffusion_files/figure-html/robustness-visualization-1.png){width=4200}\n:::\n:::\n\n\n\n# Discussion: Cultural Theorization as Core Mechanism\n\nOur enhanced ABM with comprehensive sensitivity analysis and model comparison provides robust validation for **Strang's (1993) cultural theorization theory** applied to skill diffusion in labor markets:\n\n## 1. **Parameter Robustness Confirmed**\nThe sensitivity analysis demonstrates that **theorization effects are stable** across wide ranges of parameter values, confirming that our results are not artifacts of specific parameter choices.\n\n## 2. **Mechanism Necessity Proven**\nThe model comparison shows that **cultural theorization is necessary** for asymmetric channeling. When theorization logics are reversed or neutralized, the pattern collapses or inverts, proving mechanism specificity.\n\n## 3. **Skills-Based Organizations as Amplifiers**\nContemporary skills-based organizations enhance rather than eliminate theorization effects, suggesting that organizational transformation amplifies cultural filtering processes.\n\n## 4. **Stochastic Robustness**\nThe multiple-seed analysis confirms that the core patterns emerge consistently across different random initializations, demonstrating true generative sufficiency.\n\n## 5. **Causal Inference Strengthened**\nThrough the combination of:\n\n- **Generative sufficiency** (theoretical model produces the pattern)\n- **Mechanism necessity** (altered models fail to produce the pattern)\n- **Parameter robustness** (effects stable across parameter space)\n- **Stochastic stability** (consistent across random seeds)\n\nWe provide strong computational evidence for the causal role of cultural theorization in reproducing skills-based stratification.\n\n# Conclusion\n\nThis enhanced Agent-Based Model provides comprehensive computational evidence for **cultural theorization theory** through:\n\n1. **Theoretical Validation**: Asymmetric trajectory channeling emerges robustly from theorization-based imitation\n2. **Parameter Robustness**: Effects remain stable across extensive parameter sensitivity testing\n3. **Mechanism Necessity**: Model comparison proves cultural theorization is required for the pattern\n4. **Contemporary Relevance**: Skills-based organizational typology shows theory applies to modern organizations\n5. **Stochastic Robustness**: Pattern emerges consistently across multiple random initializations\n\nThe combination of **sensitivity analysis**, **model comparison**, and **robustness testing** elevates this work beyond simple demonstration to rigorous computational validation, strengthening causal claims about how cultural meanings shape organizational behavior and reproduce stratification in labor markets. This work demonstrates that **cultural theorization is both necessary and sufficient** for generating asymmetric trajectory channeling, providing strong evidence for the micro-foundations of skills-based stratification in contemporary organizations.\n\n\n\n\n",
    "supporting": [
      "01_abm_skill_diffusion_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../../../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}